{\rtf1\ansi \deff4\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn;}{\f1\froman\fcharset2\fprq2 Symbol;}{\f2\fswiss\fcharset0\fprq2 Helv;}{\f3\fmodern\fcharset0\fprq1 Courier;}
{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f6\froman\fcharset0\fprq2 MS Serif;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f8\froman\fcharset0\fprq2 Times;}{\f9\fswiss\fcharset0\fprq2 Helvetica;}
{\f10\fswiss\fcharset0\fprq2 System;}{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f12\froman\fcharset0\fprq2 New York;}{\f13\fswiss\fcharset0\fprq2 Geneva;}{\f14\fmodern\fcharset0\fprq1 LinePrinter;}{\f15\froman\fcharset0\fprq2 CG Times;}
{\f16\fswiss\fcharset0\fprq2 Univers;}{\f17\fswiss\fcharset0\fprq2 Univers Condensed;}{\f18\fswiss\fcharset0\fprq2 Antique Olive;}{\f19\froman\fcharset0\fprq2 Garamond;}{\f20\fswiss\fcharset0\fprq2 CG Omega;}{\f21\fswiss\fcharset0\fprq2 Albertus Medium;}
{\f22\fswiss\fcharset0\fprq2 Albertus Extra Bold;}{\f23\froman\fcharset0\fprq2 Clarendon Condensed;}{\f24\fscript\fcharset0\fprq2 Coronet;}{\f25\fmodern\fcharset0\fprq1 Letter Gothic;}{\f26\fscript\fcharset0\fprq2 Marigold;}
{\f27\fnil\fcharset2\fprq2 Wingdings;}{\f28\fnil\fcharset2\fprq2 Marlett;}{\f29\fswiss\fcharset0\fprq2 Arial Narrow;}{\f30\froman\fcharset2\fprq2 Wingdings 2;}{\f31\fnil\fcharset2\fprq2 MS Reference 1;}{\f32\fnil\fcharset2\fprq2 MS Reference 2;}
{\f33\fscript\fcharset0\fprq2 Comic Sans MS;}{\f34\fswiss\fcharset0\fprq2 Arial Black;}{\f35\fswiss\fcharset0\fprq2 Verdana;}{\f36\froman\fcharset0\fprq2 Bookman Old Style;}{\f37\fmodern\fcharset2\fprq1 MS LineDraw;}
{\f38\fswiss\fcharset0\fprq2 Lucida Sans Unicode;}{\f39\fnil\fcharset2\fprq2 Monotype Sorts;}{\f40\fswiss\fcharset0\fprq2 Impact;}{\f41\fswiss\fcharset0\fprq2 Tahoma;}{\f42\fmodern\fcharset0\fprq1 Lucida Console;}{\f43\fmodern\fcharset2\fprq1 OCR-A;}
{\f44\fmodern\fcharset0\fprq1 QuickType Mono;}{\f45\fswiss\fcharset0\fprq2 QuickType;}{\f46\fswiss\fcharset0\fprq2 QuickType Condensed;}{\f47\fnil\fcharset2\fprq2 QuickType Pi;}{\f48\fswiss\fcharset0\fprq2 Franklin Gothic Book;}
{\f49\fswiss\fcharset0\fprq2 Franklin Gothic Demi;}{\f50\fswiss\fcharset0\fprq2 Franklin Gothic Demi Cond;}{\f51\fswiss\fcharset0\fprq2 Franklin Gothic Heavy;}{\f52\fswiss\fcharset0\fprq2 Franklin Gothic Medium;}
{\f53\fswiss\fcharset0\fprq2 Franklin Gothic Medium Cond;}{\f54\fnil\fcharset0\fprq2 Microsoft Logo;}{\f55\froman\fcharset2\fprq2 Webdings;}{\f56\fnil\fcharset0\fprq2 BodegaSans;}{\f57\fnil\fcharset0\fprq2 BodegaSansMedium;}
{\f58\fnil\fcharset0\fprq2 OfficinaSansNormal;}{\f59\fnil\fcharset0\fprq2 OfficinaSansBold;}{\f60\fmodern\fcharset255\fprq2 Modern;}{\f61\froman\fcharset0\fprq0 Bookshelf Symbol 3;}{\f62\fswiss\fcharset0\fprq1 MS Dialog;}}{\colortbl;\red0\green0\blue0;
\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;
\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar \f4\fs20 \snext0 Normal,n;}{\s1\sb240\sa160\keepn\widctlpar \b\f5\fs32 \sbasedon0\snext0 heading 1,H1;}{\s2\sb240\sa60\keepn\widctlpar 
\b\f5\fs28 \sbasedon0\snext0 heading 2,H2;}{\s3\sb240\sa60\keepn\widctlpar \b\f5 \sbasedon0\snext0 heading 3,H3;}{\*\cs10 \additive Default Paragraph Font;}{\s15\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 
\sbasedon0\snext15 code;}{\s16\li360\widctlpar \f4\fs20 \sbasedon0\snext16 StandardPara;}{\s17\widctlpar \f4\fs20 \sbasedon0\snext17 footnote text;}{\*\cs18 \additive\fs16 \sbasedon10 annotation reference;}{\s19\widctlpar \f4\fs20 \sbasedon0\snext19 
annotation text;}{\s20\sb120\sa120\widctlpar \b\f4\fs20 \sbasedon0\snext0 caption;}{\s21\widctlpar\tqc\tx4320\tqr\tx8640 \f4\fs20 \sbasedon0\snext21 header;}{\s22\widctlpar\tqc\tx4320\tqr\tx8640 \f4\fs20 \sbasedon0\snext22 footer;}{\*\cs23 \additive
\sbasedon10 page number;}{\s24\sa120\sl240\slmult0\widctlpar \f16\fs18 \sbasedon25\snext24 TableBottom;}{\s25\sa60\sl240\slmult0\widctlpar \f16\fs18 \snext25 TableBody;}{\s26\sa60\sl240\slmult0\keep\keepn\widctlpar \b\f16\fs18 \snext25 TableHeading;}{
\s27\widctlpar \f4\fs20 \sbasedon0\snext0 toc 1;}{\s28\li200\widctlpar \f4\fs20 \sbasedon0\snext0 toc 2;}{\s29\li400\widctlpar \f4\fs20 \sbasedon0\snext0 toc 3;}{\s30\li600\widctlpar \f4\fs20 \sbasedon0\snext0 toc 4;}{\s31\li800\widctlpar \f4\fs20 
\sbasedon0\snext0 toc 5;}{\s32\li1000\widctlpar \f4\fs20 \sbasedon0\snext0 toc 6;}{\s33\li1200\widctlpar \f4\fs20 \sbasedon0\snext0 toc 7;}{\s34\li1400\widctlpar \f4\fs20 \sbasedon0\snext0 toc 8;}{\s35\li1600\widctlpar \f4\fs20 \sbasedon0\snext0 toc 9;}}
{\info{\title DV data in the AVI File Format Specification}{\author Annie Pearson}{\keywords stream file chunk AVI DV RIFF video audio}{\operator Annie Pearson}{\creatim\yr1997\mo9\dy4\hr12\min21}{\revtim\yr1997\mo9\dy8\hr11\min32}
{\printim\yr1997\mo6\dy23\hr22\min1}{\version3}{\edmins0}{\nofpages21}{\nofwords6656}{\nofchars37942}{\*\manager DirectShow Team}{\*\company Microsoft Corporation}{\vern57443}}\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade \fet0\sectd 
\sbknone\linex0\endnhere {\footer \pard\plain \s22\widctlpar\tqc\tx4320\tqr\tx8640 \f4\fs20 \tab 
\par }{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s17\widctlpar \f4\fs20 
\par \pard\plain \widctlpar \f4\fs20 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par \pard \qc\widctlpar {\b\f5\fs40 DV Data in the AVI File Format
\par Specification, {\*\bkmkstart version}Version 1.01{\*\bkmkend version}
\par }\pard \widctlpar {\fs40 
\par }\pard \qc\widctlpar 
\par 
\par 
\par 
\par 
\par {\i 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par }
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par {\b\f5\fs24 Microsoft Corporation
\par {\*\bkmkstart date}June 25, 1997{\*\bkmkend date}
\par }\pard \widctlpar 
\par \sect \sectd \linex0\endnhere {\header \pard\plain \widctlpar\tqr\tx8640 \f4\fs20 {\b\f5\fs16 DV Data in the AVI File Format Specification, }{\field{\*\fldinst {\b\f5\fs16  REF version  \\* MERGEFORMAT }}{\fldrslt {\b\f5\fs16 Version 1.01}}}{\b\f5\fs16 
 - }{\field{\*\fldinst {\b\f5\fs16  REF date  \\* MERGEFORMAT }}{\fldrslt {\b\f5\fs16 June 25, 1997}}}{\b\f5\fs16 \tab Page }{\field{\*\fldinst {\cs23\b\f5\fs16  PAGE }}{\fldrslt {\cs23\b\f5\fs16\lang1024 21}}}{\b\f5\fs16 
\par }}{\footer \pard\plain \s22\widctlpar\tqc\tx4320\tqr\tx8640 \f4\fs20 \'a9 1997 Microsoft Corporation. All rights reserved.
\par }\pard\plain \sa160\widctlpar\hyphpar0 \f4\fs20 The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as 
of the date of publication. Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented after the date of 
publication.
\par This document is for informational purposes only. MICROSOFT MAKES NO WARRANTIES, EXPRESS OR IMPLIED, IN THIS DOCUMENT.
\par Microsoft does not make any representation or warranty regarding specifications in this document or any product or item devel
oped based on these specifications. Microsoft disclaims all express and implied warranties, including but not limited to the implied warranties of merchantability, fitness for a particular purpose and freedom from infringement. Without limiting the genera
lity of the foregoing, Microsoft does not make any warranty of any kind that any item developed based on these specifications, or any portion of a specification, will not infringe any copyright, patent, trade secret or other intellectual property right of
 a
ny person or entity in any country. It is your responsibility to seek licenses for such intellectual property rights where appropriate. Microsoft shall not be liable for any damages arising out of or in connection with the use of these specifications, inc
luding liability for lost profit, business interruption, or any other damages whatsoever. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages; the above limitation may not apply to you. 
\par ActiveMovie, ActiveX, Direct3D, DirectDraw, DirectInput, DirectMusic, DirectPlay, DirectShow, DirectSound, DirectX, Microsoft, Visual C++, Win32, Windows, and Windows\~
NT are trademarks or registered trademarks of Microsoft Corporation in the United States and/or other countries. Other product and company names mentioned herein may be the trademarks of their respective owners.
\par {\f5\fs14 \'a9 }1997 Microsoft Corporation. All rights reserved.
\par Please send feedback to ihv@microsoft.com with \ldblquote DVD Data Format Specification\rdblquote  in the Subject line.
\par \pard \widctlpar\hyphpar0 {\b 
\par }\pard \widctlpar 
\par \pard \sa160\widctlpar \page {\b\f5\fs32 Contents
\par }\pard\plain \s27\widctlpar\tqr\tldot\tx8630 \f4\fs20 {\field\fldedit{\*\fldinst  TOC \\o "1-4" }{\fldrslt {\lang1024 Introduction\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009399 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003300390039000000000000}}}{\fldrslt {\lang1024 4}}}{\lang1024 
\par }\pard\plain \s28\li200\widctlpar\tqr\tldot\tx8630 \f4\fs20 {\lang1024 Scope\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009400 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400300030000000000000}}}{\fldrslt {\lang1024 4}}}{\lang1024 
\par References\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009401 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400300031000000000000}}}{\fldrslt {\lang1024 4}}}{
\lang1024 
\par Version History\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009402 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400300032000000000000}}}{\fldrslt {\lang1024 4}}}{
\lang1024 
\par }\pard\plain \s27\widctlpar\tx600\tqr\tldot\tx8630 \f4\fs20 {\lang1024 1.0\tab Types of DV AVI Files\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009403 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400300033000000000000}}}{\fldrslt {\lang1024 5}}}{\lang1024 
\par }\pard\plain \s28\li200\widctlpar\tx800\tqr\tldot\tx8630 \f4\fs20 {\lang1024 1.1.\tab Type 1: AVI files containing one DV data stream\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009404 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400300034000000000000}}}{\fldrslt {\lang1024 5}}}{\lang1024 
\par 1.2.\tab Type 2: AVI files containing DV video as a \lquote vids\rquote  stream and DV audio as \lquote auds\rquote  streams\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009405 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400300035000000000000}}}{\fldrslt {\lang1024 9}}}{\lang1024 
\par }\pard\plain \s27\widctlpar\tx600\tqr\tldot\tx8630 \f4\fs20 {\lang1024 2.0\tab AVI File Background Information\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009406 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400300036000000000000}}}{\fldrslt {\lang1024 12}}}{\lang1024 
\par }\pard\plain \s28\li200\widctlpar\tx800\tqr\tldot\tx8630 \f4\fs20 {\lang1024 2.1\tab AVI files\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009407 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400300037000000000000}}}{\fldrslt {\lang1024 12}}}{\lang1024 
\par 2.2\tab AVI RIFF Form\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009408 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400300038000000000000}}}{\fldrslt {\lang1024 
12}}}{\lang1024 
\par 2.3\tab The Main AVI Header Chunk\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009409 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400300039000000000000}}}{\fldrslt 
{\lang1024 13}}}{\lang1024 
\par 2.4\tab The Stream Header (\lquote strl\rquote ) List Chunk\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009410 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400310030000000000000}}}{\fldrslt {\lang1024 15}}}{\lang1024 
\par 2.5\tab The LIST \lquote movi\rquote  Chunk\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009411 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400310031000000000000}}
}{\fldrslt {\lang1024 16}}}{\lang1024 
\par 2.6\tab AVI RIFF File Reference\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009412 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400310032000000000000}}}{\fldrslt {
\lang1024 17}}}{\lang1024 
\par }\pard\plain \s29\li400\widctlpar\tx1200\tqr\tldot\tx8630 \f4\fs20 {\lang1024 2.6.1\tab MainAVIHeader\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009413 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400310033000000000000}}}{\fldrslt {\lang1024 17}}}{\lang1024 
\par 2.6.2\tab AVIStreamHeader\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009414 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400310034000000000000}}}{\fldrslt {
\lang1024 18}}}{\lang1024 
\par 2.6.3\tab BITMAPINFOHEADER structure\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009415 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400310035000000000000}}
}{\fldrslt {\lang1024 20}}}{\lang1024 
\par 2.6.4\tab WAVEFORMATEX structure\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc398009416 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003300390038003000300039003400310036000000000000}}}{\fldrslt {
\lang1024 21}}}{\lang1024 
\par }\pard\plain \s1\sb240\sa160\keepn\widctlpar \b\f5\fs32 }}\pard\plain \s1\sb240\sa160\keepn\widctlpar \b\f5\fs32 \page {\*\bkmkstart _Toc398009399}Introduction{\*\bkmkend _Toc398009399}
\par \pard\plain \widctlpar \f4\fs20 Microsoft is specifying the format for storage of DV data in AVI files.  Conforming to this specification will ensure the AVI files authored in this format will be compatible with future versions of the Microsoft\'ae
 DirectShow\'ae (formerly ActiveMovie\'99) digital video architecture for the Microsoft Windows\'ae platform.
\par 
\par The contents of this specification should be used as background informati
on to understand the format of AVI files containing DV audio and video data, or for programmers who are using DV-AVI files on other platforms.  Applications that read or write AVI files should use the {\i File Reader (Async)} / {\i AVI Splitter} and the {
\i AVI Mux} / {\i File Writer} filters and their associated interfaces provided in the DirectShow architecture, rather than developing the routines to perform these services.  These filters simplify the programming requirements for accessing these files.

\par 
\par \pard\plain \s2\sb240\sa60\keepn\widctlpar \b\f5\fs28 {\*\bkmkstart _Toc398009400}Scope{\*\bkmkend _Toc398009400}
\par \pard\plain \widctlpar \f4\fs20 This document d
escribes the format of AVI files containing DV data.  Specific four-character codes for interleaved DV data streams and  DV compressor / decompressor stream handlers are defined.  The stream format structure for DV data is defined.  Specifications for two
 methods of storing DV data in the AVI file format are specified.
\par 
\par It is assumed that the reader is familiar with the DV data format as defined in the so called \ldblquote Blue Book\rdblquote .  For additional information on DV data formats, see the {\i Specification of Consumer-use Digital VCRs} (The \ldblquote 
Blue Book\rdblquote ; available from Matsushita Electrical Industrial Co., Ltd.). 
\par 
\par \pard\plain \s2\sb240\sa60\keepn\widctlpar \b\f5\fs28 {\*\bkmkstart _Toc398009401}References{\*\bkmkend _Toc398009401}
\par \pard\plain \widctlpar \f4\fs20 For additional information about RIFF files, see the Microsoft Windows Software Development Kit {\i Multimedia Programmer\rquote s Guide} and {\i Multimedia Programmer\rquote s Reference}.
\par 
\par For additional information about AVI files, see chapter 6 of the Microsoft Video for Windows Development Kit, version 1.1, {\i Programmer\rquote s Guide;} see also {\i OpenDML AVI File Format Extensions,} {\i version 1.02}
, published by the OpenDML AVI M-JPEG File Format Subcommittee, February 28, 1996.
\par 
\par For additional information on installable compressors and decompressors, see the {\i Video Compression/Decompression Drivers} Technical Note from Microsoft.
\par 
\par For additional information on Microsoft DirectShow architecture, filters, data-types, interfaces, etc., see the {\i Microsoft DirectX Media} {\i Software Development Kit} documentation (which includes DirectShow).
\par \pard\plain \s17\widctlpar \f4\fs20 
\par \pard\plain \widctlpar \f4\fs20 Portions of the above Microsoft and OpenDML Subcommittee documents may have been reprinted in this specification. Microsoft SDKs are available through Microsoft Developer Network (MSDN) Professional membership.
\par 
\par \pard\plain \s2\sb240\sa60\keepn\widctlpar \b\f5\fs28 {\*\bkmkstart _Toc398009402}Version History{\*\bkmkend _Toc398009402}
\par \pard\plain \widctlpar \f4\fs20 
\par \pard \fi-2880\li2880\widctlpar\tx1440 Version 0.90\tab June 6, 1997\tab First draft in specification format
\par Version 0.95\tab June 13, 1997\tab Minor corrections, includes example filter graphs
\par Version 1.00\tab June 23, 1997\tab Final first version, includes pro/cons of two types of AVI files, example RIFF dumps of headers
\par Version 1.01\tab June 25, 1997\tab Very minor typo correction; formatting
\par \pard\plain \s1\sb240\sa160\keepn\widctlpar \b\f5\fs32 \page {\*\bkmkstart _Toc398009403}1.0\tab Types of DV AVI Files{\*\bkmkend _Toc398009403}
\par \pard\plain \s2\sb240\sa60\keepn\widctlpar \b\f5\fs28 {\*\bkmkstart _Toc398009404}1.1.\tab Type 1: AVI files containing one DV data stream{\*\bkmkend _Toc398009404}
\par \pard\plain \widctlpar \f4\fs20 
Interleaved DV data can be stored in its native format as a single stream within an AVI RIFF file.  This has the advantage of using the minimum amount of data storage for DV.  The primary disadvantage is that this file format is not backward compatable wi
th Video for Windows, as it does not contain either a video \lquote vids\rquote  or an audio \lquote auds\rquote  stream.  Support is provided for the interleaved DV stream via the \ldblquote DV Mux\rdblquote  and \ldblquote DV Splitter\rdblquote 
 DirectShow filters.
\par 
\par DV data can be stored in a single stream within an AVI RIFF file by specifying the \lquote ivas\rquote  (interleaved video and audio stream) four-character code in the {\b fccType} member and either of the \lquote dvsd\rquote , \lquote dvhd\rquote , or 
\lquote dvsl\rquote  four-character codes in the {\b fccHandler} member of the \lquote strh\rquote  stream header chunk.  The frames per second of the video stream must be specified in the {\b dwRate} / {\b dwScale}
 members and the total number of video blocks in the \lquote movi\rquote  chunk in the {\b dwLength} member.
\par 
\par The \lquote dvsd\rquote  stream handler four-character code specifies that the DV data is as defined in Part 2 of the \ldblquote Blue Book.\rdblquote   Video is in the format of 525 lines at 29.97Hz (525-60) or 625 lines at 25.00Hz (625-50).
\par 
\par The \lquote dvhd\rquote  stream handler four-character code specifies that the DV data is as defined in Part 3 of the \ldblquote Blue Book.\rdblquote   Video is in the format of 1125 lines at 30.00Hz (1125-60) or 1250 lines at 25.00Hz (1250-50).
\par 
\par The \lquote dvsl\rquote  stream handler four-character code specifies that the DV data is as defined in Part 6 of the \ldblquote Blue Book.\rdblquote   Video is in the format of high-compression SD (SDL).
\par 
\par NOTE:  The remainder of this specification provides definitions for \lquote dvsd\rquote  streams.  Definitions for \lquote dvhd\rquote  and \lquote dvsl\rquote  will be provided at a later date.
\par 
\par This stream header chunk must be followed by {\b DVINFO} stream format chunk.  The {\b DVINFO} stream format has the following data structure defined for it:
\par 
\par \pard\plain \s15\keep\keepn\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 typedef struct tag_DVINFO \{
\par \tab DWORD dwDVAAuxSrc;
\par \tab DWORD dwDVAAuxCtl;
\par \tab DWORD dwDVAAuxSrc1;
\par \tab DWORD dwDVAAuxCtl1;
\par \tab DWORD dwDVVAuxSrc;
\par \tab DWORD dwDVVAuxCtl;
\par \tab DWORD dwDVReserved[2];
\par \} DVINFO, *PDVINFO;
\par \pard\plain \s17\widctlpar \f4\fs20 
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwDVAAuxSrc
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the {\b Audio} Auxiliary Data {\b Source}
 Pack for the first audio block (first 5 DV DIF sequences for 525-60 systems or 6 DV DIF sequences for 625-50 systems) of a frame.  The Audio Auxiliary Data Source Pack is defined in section D.7.1 of Part 2, Annex D, \ldblquote 
The Pack Header Table and Contents of Packs\rdblquote  of the \ldblquote Blue Book.\rdblquote 
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwDVAAuxCtl
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the {\b Audio} Auxiliary Data Source {\b Control} Pack for the first audio block of a frame. The Audio Auxiliary Data Control Pack is defined in section D.7.2 of Part 2, Annex D, \ldblquote 
The Pack Header Table and Contents of Packs\rdblquote  of the \ldblquote Blue Book.\rdblquote 
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwDVAAuxSrc1
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the {\b Audio} Auxiliary Data {\b Source} Pack for the second audio block (second 5 DV DIF sequences for 525-60 systems or 6 DV DIF sequences for 625-50 systems) of a frame.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwDVAAuxCrl1
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the {\b Audio} Auxiliary Data Source {\b Control} Pack for the second audio block of a frame.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwDVVAuxSrc
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the {\b Video} Auxiliary Data {\b Source} Pack as defined in section D.8.1 of Part 2, Annex D, \ldblquote The Pack Header Table and Contents of Packs\rdblquote  of the \ldblquote Blue Book.\rdblquote 

\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwDVVAuxCtl
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the {\b Video} Auxiliary Data Source {\b Control} Pack as defined in section D.8.2 of Part 2, Annex D, \ldblquote The Pack Header Table and Contents of Packs\rdblquote  of  the \ldblquote Blue Book.
\rdblquote 
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b DwDVReserved[2]
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Reserved.  Set this array to zero.
\par \pard\plain \s17\widctlpar \f4\fs20 
\par The actual DV data is stored as \lquote ##dc\rquote  chunks in the \lquote movi\rquote 
 chunk (the ## in the format represents the stream identifier).  Each chunk contains one frame of data, either 10 or 12 DV DIF sequences for 525-60 or 625-50 systems, respectively.  The DV SD (\lquote dvsd\rquote 
) DIF sequence format is defined in Part 2 of the \ldblquote Blue Book.\rdblquote 
\par 
\par Figure 1, below, illustrates the playback of a type 1 DV-AVI file using a DirectShow filter graph (filters included in DirectShow that deal specifically with DV data are highlighted in gray). Table 1, below, defines the media types.
\par 
\par \pard \s17\qc\li-1800\ri-1800\keepn\widctlpar {\pard\plain \s17\qc\li-1800\ri-1800\keepn\widctlpar \f4\fs20 {\object\objautlink\rsltmerge\rsltpict\objw0\objh0{\*\objclass }{\*\objdata 010500000100000010000000566973696f2e44726177696e672e340043000000
433a5c50726f6772616d2046696c65735c566973696f5c44726177696e67735c506c61796261636b2074797065312044562046696c7465722047726170682e76736400000000000000000000000000000000000105000000000000}{\result {{\pict\wmetafile8\picw18210\pich4558
\picwgoal10324\pichgoal2584 
0100090000039f0600000900100000000000050000000b0200000000050000000c023504ce10050000000902ffffff000500000001020000000004000000020102000500000001020000000007000000fc020000ffffff000000040000002d01000009000000fa02000003000000000000002200040000002d0101000e0000
00240305000d00fb02b002fb02b00239010d0039010d00fb0209000000fa02000000000000000000002200040000002d01020007000000fc020100000000000000040000002d01030004000000f001010010000000fb02bdff1e000000000090010000000000000022417269616c00b281040000002d01010010000000fb02
1000070000000000bc02000000000102022253797374656d006e040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010100100000002105130046696c6520536f7572636520286173796e63290006023e00090000002105060046
696c74657256021401040000002d010400050000000902e6e6e6000500000001020000000004000000020102000500000001020000000007000000fc020000e6e6e6009929040000002d01050009000000fa02000003000000000000002200040000002d0106000e000000240305001507fb02b809fb02b809390115073901
1507fb02040000002d010200040000002d01030004000000f001050004000000f0010600040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d01010007000000210502004456de0138080a0000002105080053
706c69747465722e02fe07090000002105060046696c7465727e021c08040000002d010400050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d01000009000000fa02000003000000000000002200040000002d0105000e000000240305009103fb023406fb023406
3901910339019103fb02040000002d010200040000002d01030004000000f0010500040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010100080000002105030041564900de01ac040a0000002105080053
706c69747465722e027a04090000002105060046696c7465727e029804040000002d010400050000000902e6e6e6000500000001020000000004000000020102000500000001020000000007000000fc020000e6e6e6009929040000002d01050009000000fa02000003000000000000002200040000002d0106000e000000
24030500990acf013c0dcf013c0d0d00990a0d00990acf01040000002d010200040000002d01030004000000f001050004000000f0010600040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101000a0000
0021050800445620566964656fb2005d0b0a000000210507004465636f6465720002016d0b090000002105060046696c7465725201a00b040000002d010400050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d01000009000000fa02000003000000000000002200
040000002d0105000e000000240305001d0ecf01c010cf01c0100d001d0e0d001d0ecf01040000002d010200040000002d01030004000000f0010500040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101
000900000021050500566964656f00b200190f0a0000002105080052656e64657265720201e40e090000002105060046696c7465725201240f040000002d010400050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d01000009000000fa0200000300000000000000
2200040000002d0105000e000000240305001d0e2704c0102704c01065021d0e65021d0e2704040000002d010200040000002d01030004000000f0010500040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d
0101000900000021050500417564696f000a03190f0a0000002105080052656e64657265725a03e40e090000002105060046696c746572aa03240f040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d010500040000000201
01000c00000025030400b0021a02fb021a0221031a0269031a02040000002d01020004000000f001050004000000020102000500000001020000000007000000fc020000000000000000040000002d01050009000000fa02050000000000ffffff002200040000002d0106000c000000240304006303030291031a02630331
0263030302040000002d010200040000002d01030010000000fb02bdff200000000000bc020000000000000020417269616c00ad03040000002d010700040000002d010400040000002d010000040000002d0106000c000000240304000303ec01030348023f0348023f03ec01040000002d010200040000002d0103000400
000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010041002e020903040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004
000000020101000a0000002503030034061a02a5061a02ed061a02040000002d01020004000000f0010800040000000201020005000000010200000000040000002d010500040000002d0106000c00000024030400e706030215071a02e7063102e7060302040000002d010200040000002d010300040000002d0107000400
00002d010400040000002d010000040000002d0106000c000000240304008706ec0187064802c3064802c306ec01040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010042002e028d
06040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000c00000025030400b809e201290ae201290aee00710aee00040000002d01020004000000f001080004000000020102000500000001020000
0000040000002d010500040000002d0106000c000000240304006b0ad700990aee006b0a05016b0ad700040000002d010200040000002d010300040000002d010700040000002d010400040000002d010000040000002d0106000c000000240304000b0a3a010b0a9601470a9601470a3a01040000002d010200040000002d
0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010043007c01110a040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa0200000300000000000000220004000000
2d01080004000000020101000c00000025030400b8095302eb0b5302eb0b4603f50d4603040000002d01020004000000f0010800040000000201020005000000010200000000040000002d010500040000002d0106000c00000024030400ef0d2f031d0e4603ef0d5d03ef0d2f03040000002d010200040000002d01030004
0000002d010700040000002d010400040000002d010000040000002d0106000c00000024030400cd0b9f02cd0bfb02090cfb02090c9f02040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d01070007000000
210501004400e102d30b040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000a000000250303003c0dee00ad0dee00f50dee00040000002d01020004000000f00108000400000002010200050000
00010200000000040000002d010500040000002d0106000c00000024030400ef0dd7001d0eee00ef0d0501ef0dd700040000002d010200040000002d010300040000002d010700040000002d010400040000002d010000040000002d0106000c00000024030400900dc000900d1c01c90d1c01c90dc000040000002d010200
040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010045000201960d040000002d0104000300000000000000}}}}}
\par \pard\plain \s20\qc\sb120\sa120\widctlpar \b\f4\fs20 Figure {\field{\*\fldinst  SEQ Figure \\* ARABIC }{\fldrslt {\lang1024 1}}}:  Playback of type-1 DV-AVI file
\par \pard\plain \widctlpar \f4\fs20 
\par \pard\plain \s20\qc\sb120\sa120\keepn\widctlpar \b\f4\fs20 Table {\field{\*\fldinst  SEQ Table \\* ARABIC }{\fldrslt {\lang1024 1}}}:  DV media types
\par \trowd \trgaph108\trleft-120\trhdr\trbrdrt\brdrs\brdrw15 \trbrdrl\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \clcbpat8\clshdng1000 \cellx1080\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \clcbpat8\clshdng1000 \cellx2760\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \clcbpat8\clshdng1000 \cellx4560\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \clcbpat8\clshdng1000 \cellx6600\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr
\brdrs\brdrw15 \clcbpat8\clshdng1000 \cellx8640 \pard\plain \qc\widctlpar\intbl \f4\fs20 {\b\i Connection\cell Major Type\cell Sub Type\cell Format Block Type\cell Format Block Struct\cell }\pard \widctlpar\intbl {\b\i \row }\trowd \trgaph108\trleft-120
\trbrdrt\brdrs\brdrw15 \trbrdrl\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx1080\clbrdrt
\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx2760\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx4560\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb
\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx6600\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx8640 \pard \qc\widctlpar\intbl {\b\f5 A\cell }\pard \sb40\sa40\widctlpar\intbl {\f11\fs16 MEDIATYPE_Stream
\cell MEDIASUBTYPE_AVI\cell \cell \cell }\pard \widctlpar\intbl \row \pard \qc\sb40\sa40\widctlpar\intbl {\b\f5\fs16 B\cell }\pard \sb40\sa40\widctlpar\intbl {\f11\fs16 MEDIATYPE_iavs\cell MEDIASUBTYPE_dvsd
\par MEDIASUBTYPE_dvhd
\par MEDIASUBTYPE_dvsl\cell FORMAT_DVinfo\cell DVINFO\cell }\pard \widctlpar\intbl \row \pard \qc\sb40\sa40\widctlpar\intbl {\b\f5\fs16 C\cell }\pard \sb40\sa40\widctlpar\intbl {\f11\fs16 MEDIATYPE_VIDEO\cell MEDIASUBTYPE_dvsd
\par MEDIASUBTYPE_dvhd
\par MEDIASUBTYPE_dvsl\cell FORMAT_DVinfo\cell DVINFO\cell }\pard \widctlpar\intbl \row \pard \qc\sb40\sa40\widctlpar\intbl {\b\f5\fs16 D\cell }\pard \sb40\sa40\widctlpar\intbl {\f11\fs16 MEDIATYPE_AUDIO\cell NULL\cell FORMAT_WaveFormatEx\cell WAVEFORMATEX
\cell }\pard \widctlpar\intbl \row \trowd \trgaph108\trleft-120\trbrdrt\brdrs\brdrw15 \trbrdrl\brdrs\brdrw15 \trbrdrb\brdrs\brdrw15 \trbrdrr\brdrs\brdrw15 \trbrdrh\brdrs\brdrw15 \trbrdrv\brdrs\brdrw15 \clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb
\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx1080\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx2760\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx4560
\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx6600\clbrdrt\brdrs\brdrw15 \clbrdrl\brdrs\brdrw15 \clbrdrb\brdrs\brdrw15 \clbrdrr\brdrs\brdrw15 \cellx8640 \pard \qc\sb40\sa40\widctlpar\intbl {\b\f5\fs16 E
\cell }\pard \sb40\sa40\widctlpar\intbl {\f11\fs16 MEDIATYPE_VIDEO\cell }{\fs16 standard video subtypes\cell }{\f11\fs16 FORMAT_VideoInfo\cell VIDEOINFO\cell }\pard \widctlpar\intbl \row \pard \widctlpar 
\par 
\par \pard\plain \s17\widctlpar \f4\fs20 Figure 2, below, illustrates the creation of a type 1 DV-AVI
 file using a DirectShow filter graph.  Table 1, above, defines the media types.  Upstream filters (not shown) can be of any combination to produce the proper media types, D and E.
\par \pard\plain \widctlpar \f4\fs20 
\par \pard \qc\li-1800\ri-1800\keepn\widctlpar {\pard\plain \qc\li-1800\ri-1800\keepn\widctlpar \f4\fs20 {\object\objautlink\rsltpict\objw0\objh0{\*\objclass }{\*\objdata 010500000100000010000000566973696f2e44726177696e672e340043000000
433a5c50726f6772616d2046696c65735c566973696f5c44726177696e67735c456e636f64696e672074797065312044562046696c7465722047726170682e76736400000000000000000000000000000000000105000000000000}{\result {{\pict\wmetafile8\picw19163\pich3288
\picwgoal10864\pichgoal1864 
010009000003970500000a00100000000000050000000b0200000000050000000c020903af11050000000902ffffff000500000001020000000004000000020102000500000001020000000007000000fc020000ffffff000000040000002d01000009000000fa02000003000000000000002200040000002d0101000e0000
0024030500fe0efb02a111fb02a1113901fe0e3901fe0efb0209000000fa02000000000000000000002200040000002d01020007000000fc020100000000000000040000002d01030004000000f001010010000000fb02bdff1e000000000090010000000000000022417269616c00b281040000002d01010010000000fb02
1000070000000000bc02000000000102022253797374656d006e040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101000c00000021050b0046696c6520577269746572000602b70f090000002105060046696c746572560205
10040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01050004000000020101000c000000250304000d00ee008401ee004002ee004a04ee00040000002d01020004000000f001050004000000020102000500000001020000
000007000000fc020000000000000000040000002d01050009000000fa02050000000000ffffff002200040000002d0106000c000000240304004404d7007204ee00440405014404d700040000002d010200040000002d01030010000000fb02bdff200000000000bc020000000000000020417269616c00ad03040000002d
010700040000002d010400040000002d010000040000002d0106000c000000240304002302c00023021c015c021c015c02c000040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0107000700000021050100
450002012902040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000c000000250304001507ee008607ee008607e201ce07e201040000002d01020004000000f00108000400000002010200050000
00010200000000040000002d010500040000002d0106000c00000024030400c807cb01f607e201c807f901c807cb01040000002d010200040000002d010300040000002d010700040000002d010400040000002d010000040000002d0106000c0000002403040068073a0168079601a4079601a4073a01040000002d010200
040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010043007c016e07040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa020000030000000000000022
00040000002d01080004000000020101000a00000025030300990a1a020a0b1a02520b1a02040000002d01020004000000f0010800040000000201020005000000010200000000040000002d010500040000002d0106000c000000240304004c0b03027a0b1a024c0b31024c0b0302040000002d010200040000002d010300
040000002d010700040000002d010400040000002d010000040000002d0106000c00000024030400ec0aec01ec0a4802280b4802280bec01040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000
002105010042002e02f20a040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000a000000250303001d0e1a028e0e1a02d60e1a02040000002d01020004000000f001080004000000020102000500
0000010200000000040000002d010500040000002d0106000c00000024030400d00e0302fe0e1a02d00e3102d00e0302040000002d010200040000002d010300040000002d010700040000002d010400040000002d010000040000002d0106000c00000024030400700eec01700e4802ac0e4802ac0eec01040000002d0102
00040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010041002e02760e040000002d010400050000000902e6e6e6000500000001020000000004000000020102000500000001020000000007000000fc02
0000e6e6e6009929040000002d01080009000000fa02000003000000000000002200040000002d0109000e000000240305007204cf011507cf0115070d0072040d007204cf01040000002d010200040000002d01030004000000f001080004000000f0010900040000002d010100040000002d010400040000000801000005
0000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101000a00000021050800445620566964656fb20036050a00000021050700456e636f6465720002014705090000002105060046696c74657252017905040000002d010400050000000902e6e6e6000500000001020000
000004000000020102000500000001020000000007000000fc020000e6e6e6009929040000002d01080009000000fa02000003000000000000002200040000002d0109000e00000024030500f607fb02990afb02990a3901f6073901f607fb02040000002d010200040000002d01030004000000f001080004000000f00109
00040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d01010007000000210502004456de01190908000000210503004d7578002e020809090000002105060046696c7465727e02fd08040000002d0104000500
00000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d01000009000000fa02000003000000000000002200040000002d0108000e000000240305007a0bfb021d0efb021d0e39017a0b39017a0bfb02040000002d010200040000002d01030004000000f0010800040000002d
010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010100080000002105030041564900de01950c08000000210503004d7578002e028c0c090000002105060046696c7465727e02810c040000002d010400050000000902
ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000c000000250304000d005302b002530202045302ce075302040000002d01020004000000f0010800040000000201020005000000010200000000040000002d010500040000002d
0106000c00000024030400c8073c02f6075302c8076a02c8073c02040000002d010200040000002d010300040000002d010700040000002d010400040000002d010000040000002d0106000c00000024030400e4032502e40381022004810220042502040000002d010200040000002d010300040000000801000005000000
0a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010044006702ea03040000002d0104000300000000000000}}}}}
\par \pard\plain \s20\qc\sb120\sa120\widctlpar \b\f4\fs20 Figure {\field{\*\fldinst  SEQ Figure \\* ARABIC }{\fldrslt {\lang1024 2}}}:  Creation of type 1 DV-AVI file
\par \pard\plain \widctlpar \f4\fs20 
\par 
\par Figure 3, below, illustrates the creation of a type 1 DV-AVI file utilizing a \ldblquote source\rdblquote  filter that communicates via hardware device drivers to a DV device
 (such as a 1394-based DV camcorder) for DV data input using a DirectShow filter graph.  Table 1, above, defines the\'ff@edia types.
\par 
\par \pard \qc\li-1800\ri-1800\keepn\widctlpar {\pard\plain \qc\li-1800\ri-1800\keepn\widctlpar \f4\fs20 {\object\objautlink\rsltpict\objw0\objh0{\*\objclass }{\*\objdata 010500000100000010000000566973696f2e44726177696e672e340042000000
433a5c50726f6772616d2046696c65735c566973696f5c44726177696e67735c436170747572652074797065312044562046696c7465722047726170682e76736400000000000000000000000000000000000105000000000000}{\result {{\pict\wmetafile8\picw10590\pich4558\picwgoal6004\pichgoal2584 
010009000003f00300000a00100000000000050000000b0200000000050000000c023504c609050000000902ffffff000500000001020000000004000000020102000500000001020000000007000000fc020000ffffff000000040000002d01000009000000fa02000003000000000000002200040000002d0101000e0000
00240305001507cf01b809cf01b8090d0015070d001507cf0109000000fa02000000000000000000002200040000002d01020007000000fc020100000000000000040000002d01030004000000f001010010000000fb02bdff1e000000000090010000000000000022417269616c009c86040000002d01010010000000fb02
1000070000000000bc02000000000102022253797374656d006e040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101000c00000021050b0046696c652057726974657200da00ce07090000002105060046696c7465722a011c
08040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01050004000000020101000a00000025030300b002ee002103ee006903ee00040000002d01020004000000f00105000400000002010200050000000102000000000700
0000fc020000000000000000040000002d01050009000000fa02050000000000ffffff002200040000002d0106000c000000240304006303d7009103ee00630305016303d700040000002d010200040000002d01030010000000fb02bdff200000000000bc020000000000000020417269616c006bad040000002d01070004
0000002d010400040000002d010000040000002d0106000c000000240304000303c00003031c013f031c013f03c000040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010042000201
0903040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000a000000250303003406ee00a506ee00ed06ee00040000002d01020004000000f001080004000000020102000500000001020000000004
0000002d010500040000002d0106000c00000024030400e706d7001507ee00e7060501e706d700040000002d010200040000002d010300040000002d010700040000002d010400040000002d010000040000002d0106000c000000240304008706c00087061c01c3061c01c306c000040000002d010200040000002d010300
0400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0107000700000021050100410002018d06040000002d010400050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d01000009000000fa0200
0003000000000000002200040000002d0108000e000000240305009103cf013406cf0134060d0091030d009103cf01040000002d010200040000002d01030004000000f0010800040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e011800050000000902
00000000040000002d010100080000002105030041564900b200ac0408000000210503004d7578000201a304090000002105060046696c74657252019804040000002d010400050000000902e6e6e6000500000001020000000004000000020102000500000001020000000007000000fc020000e6e6e6009929040000002d
01080009000000fa02000003000000000000002200040000002d0109000e000000240305000d00cf01b002cf01b0020d000d000d000d00cf01040000002d010200040000002d01030004000000f001080004000000f0010900040000002d010100040000002d0104000400000008010000050000000a020000000004000000
02010100040000002e01180005000000090200000000040000002d0101000a0000002105080022536f7572636522da00dd00090000002105060046696c7465722a011401040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa020000030000009a9a9a002200040000002d
01080004000000020101000a000000250303005f0191035f01b0025f01f801040000002d01020004000000f001080004000000020102000500000001020000000007000000fc0200009a9a9a002f04040000002d010800040000002d0106000c000000240304004801fd015f01cf017601fd014801fd01040000002d010200
040000002d01030004000000f0010800050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d010000040000002d0106000e000000240305000d002704b0022704b00291030d0091030d002704040000002d010200040000002d010300040000002d010100040000002d
0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101000500000009029a9a9a000b0000002105090044562044657669636500f003c00005000000090200000000040000002d01040003000000000000000000}}}}}
\par \pard\plain \s20\qc\sb120\sa120\widctlpar \b\f4\fs20 Figure {\field{\*\fldinst  SEQ Figure \\* ARABIC }{\fldrslt {\lang1024 3}}}:  DV capture to type 1 DV-AVI file
\par \pard\plain \widctlpar \f4\fs20 
\par 
\par Figure 4, below, illustrates the \ldblquote output\rdblquote  of a type 1 DV-AVI file utilizing a \ldblquote sink\rdblquote  filter that communicates via hardware device drivers to a DV device (such as a 1394-based DV camcorder) for DV data out
put using a DirectShow filter graph.  Table 1, above, defines the media types.
\par 
\par \pard \qc\li-1800\ri-1800\keepn\widctlpar {\pard\plain \qc\li-1800\ri-1800\keepn\widctlpar \f4\fs20 {\object\objautlink\rsltpict\objw0\objh0{\*\objclass }{\*\objdata 010500000100000010000000566973696f2e44726177696e672e340041000000
433a5c50726f6772616d2046696c65735c566973696f5c44726177696e67735c4f75747075742074797065312044562046696c7465722047726170682e76736400000000000000000000000000000000000105000000000000}{\result {{\pict\wmetafile8\picw10590\pich4558\picwgoal6004\pichgoal2584 
010009000003f70300000a00100000000000050000000b0200000000050000000c023504c609050000000902ffffff000500000001020000000004000000020102000500000001020000000007000000fc020000ffffff000000040000002d01000009000000fa02000003000000000000002200040000002d0101000e0000
00240305000d00cf01b002cf01b0020d000d000d000d00cf0109000000fa02000000000000000000002200040000002d01020007000000fc020100000000000000040000002d01030004000000f001010010000000fb02bdff1e000000000090010000000000000022417269616c00b281040000002d01010010000000fb02
1000070000000000bc02000000000102022253797374656d006e040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010100100000002105130046696c6520536f7572636520286173796e632900da003e00090000002105060046
696c7465722a011401040000002d010400050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d01000009000000fa02000003000000000000002200040000002d0105000e000000240305009103cf013406cf0134060d0091030d009103cf01040000002d0102000400
00002d01030004000000f0010500040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010100080000002105030041564900b200ac040a0000002105080053706c697474657202017a04090000002105060046
696c74657252019804040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01050004000000020101000c00000025030400b002ee00fb02ee002103ee006903ee00040000002d01020004000000f00105000400000002010200
0500000001020000000007000000fc020000000000000000040000002d01050009000000fa02050000000000ffffff002200040000002d0106000c000000240304006303d7009103ee00630305016303d700040000002d010200040000002d01030010000000fb02bdff200000000000bc020000000000000020417269616c
00ad03040000002d010700040000002d010400040000002d010000040000002d0106000c000000240304000303c00003031c013f031c013f03c000040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700
0700000021050100410002010903040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000a000000250303003406ee00a506ee00ed06ee00040000002d01020004000000f001080004000000020102
0005000000010200000000040000002d010500040000002d0106000c00000024030400e706d7001507ee00e7060501e706d700040000002d010200040000002d010300040000002d010700040000002d010400040000002d010000040000002d0106000c000000240304008706c00087061c01c3061c01c306c00004000000
2d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0107000700000021050100420002018d06040000002d010400050000000902e6e6e60005000000010200000000040000000201020005000000010200000000070000
00fc020000e6e6e6009929040000002d01080009000000fa02000003000000000000002200040000002d0109000e000000240305001507cf01b809cf01b8090d0015070d001507cf01040000002d010200040000002d01030004000000f001080004000000f0010900040000002d010100040000002d010400040000000801
0000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d01010009000000210506002253696e6b22da000d08090000002105060046696c7465722a011c08040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003
0000009a9a9a002200040000002d01080004000000020101000a000000250303006708cf016708b00267086903040000002d01020004000000f001080004000000020102000500000001020000000007000000fc0200009a9a9a002f04040000002d010800040000002d0106000c000000240304007e086303670891035008
63037e086303040000002d010200040000002d01030004000000f0010800050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d010000040000002d0106000e0000002403050015072704b8092704b80991031507910315072704040000002d010200040000002d0103
00040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101000500000009029a9a9a000b0000002105090044562044657669636500f003c80705000000090200000000040000002d0104000300000000000000}
}}}}
\par \pard\plain \s20\qc\sb120\sa120\widctlpar \b\f4\fs20 Figure {\field{\*\fldinst  SEQ Figure \\* ARABIC }{\fldrslt {\lang1024 4}}}:  \ldblquote Output\rdblquote  of type 1 DV-AVI file
\par \pard\plain \widctlpar \f4\fs20 
\par 
\par \pard \keepn\widctlpar The following example shows the type 1 DV-AIFF RIFF form expanded with completed header chunks:
\par \pard\plain \s17\keepn\widctlpar \f4\fs20 
\par \pard\plain \s15\keep\keepn\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 00000000 RIFF (0FAE35D4) 'AVI '
\par 0000000C     LIST (00000106) 'hdrl'
\par 00000018         avih (00000038)
\par                      dwMicroSecPerFrame    : 33367
\par                      dwMaxBytesPerSec      : 3728000
\par                      dwPaddingGranularity  : 0
\par                      dwFlags               : 0x810 HASINDEX | TRUSTCKTYPE
\par                      dwTotalFrames         : 2192
\par                      dwInitialFrames       : 0
\par                      dwStreams             : 1
\par                      dwSuggestedBufferSize : 120000
\par                      dwWidth               : 720
\par                      dwHeight              : 480
\par                      dwReserved            : 0x0
\par 00000058         LIST (0000006C) 'strl'
\par 00000064             strh (00000038)
\par                          fccType               : 'ivas'
\par                          fccHandler            : 'dvsd'
\par                          dwFlags               : 0x0
\par                          wPriority             : 0
\par                          wLanguage             : 0x0 undefined
\par                          dwInitialFrames       : 0
\par                          dwScale               : 100 (29.970 Frames/Sec)
\par                          dwRate                : 2997
\par                          dwStart               : 0
\par                          dwLength              : 2192
\par                          dwSuggestedBufferSize : 120000
\par                          dwQuality             : 0
\par                          dwSampleSize          : 0
\par                          rcFrame               : 0,0,720,480
\par 000000A4             strf (00000020)
\par                          dwDVAAuxSrc     : 0x........
\par                          dwDVAAuxCtl     : 0x........
\par                          dwDVAAuxSrc1    : 0x........
\par                          dwDVAAuxCtl1    : 0x........
\par                          dwDVVAuxSrc     : 0x........
\par                          dwDVVAuxCtl     : 0x........
\par                          dwDVReserved[2] : 0,0
\par 000000CC     LIST (0FADAC00) 'movi'
\par 0FADACD4     idx1 (00008900)
\par \pard\plain \s2\sb240\sa60\keepn\pagebb\widctlpar \b\f5\fs28 {\*\bkmkstart _Toc398009405}1.2.\tab Type 2: AVI files containing DV video as a \lquote vids\rquote  stream and DV audio as \lquote auds\rquote  streams{\*\bkmkend _Toc398009405}
\par \pard\plain \widctlpar \f4\fs20 Interleaved DV data can be split into a video stream and one to four audio streams within an AVI RIFF file.  This has the advantage of being backward compatable with Video for Windows, as it does contains a standard video 
\lquote vids\rquote  stream and at least one standard audio \lquote auds\rquote  stream  The primary disadvantage is that this file format requires the audio data to be redundantly stored as audio streams.  The \ldblquote video\rdblquote 
 stream is actually the native interleaved DV data stream.  However, as a standard \lquote vids\rquote  stream with a handler type of \lquote dvsd\rquote , the DV Video Decoder is used.  This format also requires that \ldblquote captured\rdblquote 
 files are split using the \ldblquote DV Splitter\rdblquote  filter before they are written as AVI files.
\par 
\par DV data can be stored as a video stream with a separate number of audio streams in an AVI RIFF file.  The video stream is specified with a standard video stream header (the {\b fccType} member value is \lquote vids\rquote ).  The {\b fccHandler}
 member is specified as \lquote dvsd\rquote , \lquote dvhd\rquote , or \lquote dvsl\rquote .  The frames per second of the video stream must be specified in the {\b dwRate} / {\b dwScale} members and the total number of video blocks in the \lquote movi
\rquote  chunk in the {\b dwLength} member.
\par \pard\plain \s17\widctlpar \f4\fs20 
\par \pard\plain \widctlpar \f4\fs20 
In this type 2 form, the video stream format chunk is a standard BITMAPINFOHEADER structure.  The stream format chunk can be optionally extended to include the DVINFO structure, as defined above for the type 1 form, by increasing the stream format chunk s
ize from 40 bytes (size of the BITMAPINFOHEADER structure) to 72 bytes (size of BITMAPINFOHEADER plus DVINFO structures) and immediately following the BITMAPINFOHEADER data structure with a DVINFO data structure.
\par 
\par The audio stream(s) is specified with a standard audio stream header (the {\b fccType} member value is \lquote auds\rquote ).  The {\b fccHandler} member is not used for audio streams.
\par \pard\plain \s17\widctlpar \f4\fs20 
\par The DV video data is stored as \lquote ##dc\rquote  chunks, as defined in the type 1 AVI section above, and the audio data is stored as \lquote ##wb\rquote  chunks in the \lquote movi\rquote  chunk.
\par \pard\plain \widctlpar \f4\fs20 
\par \pard\plain \s17\widctlpar \f4\fs20 Figure 5, below, illustrate the playback of a type 2 DV-AVI file using a DirectShow filter graph. Table 1, above, defines the media types.
\par \pard\plain \widctlpar \f4\fs20 
\par \pard \qc\li-1800\ri-1800\keepn\widctlpar {\pard\plain \qc\li-1800\ri-1800\keepn\widctlpar \f4\fs20 {\object\objautlink\rsltpict\objw0\objh0{\*\objclass }{\*\objdata 010500000100000010000000566973696f2e44726177696e672e340043000000
433a5c50726f6772616d2046696c65735c566973696f5c44726177696e67735c506c61796261636b2074797065322044562046696c7465722047726170682e76736400000000000000000000000000000000000105000000000000}{\result {{\pict\wmetafile8\picw18210\pich4558
\picwgoal10324\pichgoal2584 
010009000003770500000900100000000000050000000b0200000000050000000c023504ce10050000000902ffffff000500000001020000000004000000020102000500000001020000000007000000fc020000ffffff000000040000002d01000009000000fa02000003000000000000002200040000002d0101000e0000
00240305000d00fb02b002fb02b00239010d0039010d00fb0209000000fa02000000000000000000002200040000002d01020007000000fc020100000000000000040000002d01030004000000f001010010000000fb02bdff1e000000000090010000000000000022417269616c00b281040000002d01010010000000fb02
1000070000000000bc02000000000102022253797374656d006e040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010100100000002105130046696c6520536f7572636520286173796e63290006023e00090000002105060046
696c74657256021401040000002d010400050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d01000009000000fa02000003000000000000002200040000002d0105000e000000240305009103fb023406fb0234063901910339019103fb02040000002d0102000400
00002d01030004000000f0010500040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010100080000002105030041564900de01ac040a0000002105080053706c69747465722e027a04090000002105060046
696c7465727e029804040000002d010400050000000902e6e6e6000500000001020000000004000000020102000500000001020000000007000000fc020000e6e6e6009929040000002d01050009000000fa02000003000000000000002200040000002d0106000e00000024030500990acf013c0dcf013c0d0d00990a0d00
990acf01040000002d010200040000002d01030004000000f001050004000000f0010600040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101000a00000021050800445620566964656fb2005d0b0a0000
00210507004465636f6465720002016d0b090000002105060046696c7465725201a00b040000002d010400050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d01000009000000fa02000003000000000000002200040000002d0105000e000000240305001d0ecf01
c010cf01c0100d001d0e0d001d0ecf01040000002d010200040000002d01030004000000f0010500040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101000900000021050500566964656f00b200190f0a
0000002105080052656e64657265720201e40e090000002105060046696c7465725201240f040000002d010400050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d01000009000000fa02000003000000000000002200040000002d0105000e000000240305001d0e
2704c0102704c01065021d0e65021d0e2704040000002d010200040000002d01030004000000f0010500040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101000900000021050500417564696f000a0319
0f0a0000002105080052656e64657265725a03e40e090000002105060046696c746572aa03240f040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01050004000000020101000c00000025030400b0021a02fb021a022103
1a0269031a02040000002d01020004000000f001050004000000020102000500000001020000000007000000fc020000000000000000040000002d01050009000000fa02050000000000ffffff002200040000002d0106000c000000240304006303030291031a026303310263030302040000002d010200040000002d0103
0010000000fb02bdff200000000000bc020000000000000020417269616c00ad03040000002d010700040000002d010400040000002d010000040000002d0106000c000000240304000303ec01030348023f0348023f03ec01040000002d010200040000002d0103000400000008010000050000000a020000000004000000
02010100040000002e01180005000000090200000000040000002d010700070000002105010041002e020903040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000c000000250304003406e20167
08e2016708ee00710aee00040000002d01020004000000f0010800040000000201020005000000010200000000040000002d010500040000002d0106000c000000240304006b0ad700990aee006b0a05016b0ad700040000002d010200040000002d010300040000002d010700040000002d010400040000002d0100000400
00002d0106000c0000002403040049083a01490896018508960185083a01040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010043007c014f08040000002d010400050000000902ff
ffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000c0000002503040034065302290a5302290a4603f50d4603040000002d01020004000000f0010800040000000201020005000000010200000000040000002d010500040000002d01
06000c00000024030400ef0d2f031d0e4603ef0d5d03ef0d2f03040000002d010200040000002d010300040000002d010700040000002d010400040000002d010000040000002d0106000c000000240304000b0a9f020b0afb02470afb02470a9f02040000002d010200040000002d0103000400000008010000050000000a
02000000000400000002010100040000002e01180005000000090200000000040000002d01070007000000210501004400e102110a040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000a000000
250303003c0dee00ad0dee00f50dee00040000002d01020004000000f0010800040000000201020005000000010200000000040000002d010500040000002d0106000c00000024030400ef0dd7001d0eee00ef0d0501ef0dd700040000002d010200040000002d010300040000002d010700040000002d010400040000002d
010000040000002d0106000c00000024030400900dc000900d1c01c90d1c01c90dc000040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010045000201960d040000002d0104000300
000000000000}}}}}
\par \pard\plain \s20\qc\sb120\sa120\widctlpar \b\f4\fs20 Figure {\field{\*\fldinst  SEQ Figure \\* ARABIC }{\fldrslt {\lang1024 5}}}:  Playback of type 2 DV-AVI file
\par \pard\plain \widctlpar \f4\fs20 
\par 
\par \pard\plain \s17\widctlpar \f4\fs20 
Figure 6, below, illustrates the creation of a type 2 DV-AVI file using a DirectShow filter graph.  Table 1, above, defines the media types.  Upstream filters (not shown) can be of any combination to produce the proper media types, D and E.
\par \pard\plain \widctlpar \f4\fs20 
\par \pard \qc\li-1800\ri-1800\keepn\widctlpar {\pard\plain \qc\li-1800\ri-1800\keepn\widctlpar \f4\fs20 {\object\objautlink\rsltpict\objw0\objh0{\*\objclass }{\*\objdata 010500000100000010000000566973696f2e44726177696e672e340043000000
433a5c50726f6772616d2046696c65735c566973696f5c44726177696e67735c456e636f64696e672074797065322044562046696c7465722047726170682e76736400000000000000000000000000000000000105000000000000}{\result {{\pict\wmetafile8\picw19163\pich3288
\picwgoal10864\pichgoal1864 
010009000003710400000a00100000000000050000000b0200000000050000000c020903af11050000000902ffffff000500000001020000000004000000020102000500000001020000000007000000fc020000ffffff000000040000002d01000009000000fa02000003000000000000002200040000002d0101000e0000
0024030500fe0efb02a111fb02a1113901fe0e3901fe0efb0209000000fa02000000000000000000002200040000002d01020007000000fc020100000000000000040000002d01030004000000f001010010000000fb02bdff1e000000000090010000000000000022417269616c00b281040000002d01010010000000fb02
1000070000000000bc02000000000102022253797374656d006e040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101000c00000021050b0046696c6520577269746572000602b70f090000002105060046696c746572560205
10040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01050004000000020101000c000000250304000d00ee008401ee004002ee004a04ee00040000002d01020004000000f001050004000000020102000500000001020000
000007000000fc020000000000000000040000002d01050009000000fa02050000000000ffffff002200040000002d0106000c000000240304004404d7007204ee00440405014404d700040000002d010200040000002d01030010000000fb02bdff200000000000bc020000000000000020417269616c006bad040000002d
010700040000002d010400040000002d010000040000002d0106000c000000240304002302c00023021c015c021c015c02c000040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0107000700000021050100
450002012902040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000c000000250304001507ee004809ee004809e201520be201040000002d01020004000000f00108000400000002010200050000
00010200000000040000002d010500040000002d0106000c000000240304004c0bcb017a0be2014c0bf9014c0bcb01040000002d010200040000002d010300040000002d010700040000002d010400040000002d010000040000002d0106000c000000240304002a093a012a0996016609960166093a01040000002d010200
040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010043007c013009040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa020000030000000000000022
00040000002d01080004000000020101000a000000250303001d0e1a028e0e1a02d60e1a02040000002d01020004000000f0010800040000000201020005000000010200000000040000002d010500040000002d0106000c00000024030400d00e0302fe0e1a02d00e3102d00e0302040000002d010200040000002d010300
040000002d010700040000002d010400040000002d010000040000002d0106000c00000024030400700eec01700e4802ac0e4802ac0eec01040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000
002105010041002e02760e040000002d010400050000000902e6e6e6000500000001020000000004000000020102000500000001020000000007000000fc020000e6e6e6009929040000002d01080009000000fa02000003000000000000002200040000002d0109000e000000240305007204cf011507cf0115070d007204
0d007204cf01040000002d010200040000002d01030004000000f001080004000000f0010900040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101000a00000021050800445620566964656fb20036050a
00000021050700456e636f6465720002014705090000002105060046696c74657252017905040000002d010400050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d01000009000000fa02000003000000000000002200040000002d0108000e000000240305007a0b
fb021d0efb021d0e39017a0b39017a0bfb02040000002d010200040000002d01030004000000f0010800040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010100080000002105030041564900de01950c08
000000210503004d7578002e028c0c090000002105060046696c7465727e02810c040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000c000000250304000d005302dc035302c4055302520b5302
040000002d01020004000000f0010800040000000201020005000000010200000000040000002d010500040000002d0106000c000000240304004c0b3c027a0b53024c0b6a024c0b3c02040000002d010200040000002d010300040000002d010700040000002d010400040000002d010000040000002d0106000c00000024
030400a6052502a6058102e2058102e2052502040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010044006702ac05040000002d0104000300000000000000}}}}}
\par \pard\plain \s20\qc\sb120\sa120\widctlpar \b\f4\fs20 Figure {\field{\*\fldinst  SEQ Figure \\* ARABIC }{\fldrslt {\lang1024 6}}}:  Creation of type 2 DV-AVI file
\par \pard\plain \widctlpar \f4\fs20 
\par 
\par Figure 7, below, illustrates the creation of a type 2 DV-AVI file utilizing a \ldblquote source\rdblquote 
 filter that communicates via hardware device drivers to a DV device (such as a 1394-based DV camcorder) for DV data input using a DirectShow filter graph.  Table 1 above defines the media types.
\par 
\par \pard \qc\li-1800\ri-1800\keepn\widctlpar {\pard\plain \qc\li-1800\ri-1800\keepn\widctlpar \f4\fs20 {\object\objautlink\rsltpict\objw0\objh0{\*\objclass }{\*\objdata 010500000100000010000000566973696f2e44726177696e672e340042000000
433a5c50726f6772616d2046696c65735c566973696f5c44726177696e67735c436170747572652074797065322044562046696c7465722047726170682e76736400000000000000000000000000000000000105000000000000}{\result {{\pict\wmetafile8\picw14400\pich4558\picwgoal8164\pichgoal2584 
010009000003b70500000a00100000000000050000000b0200000000050000000c0235044a0d050000000902ffffff000500000001020000000004000000020102000500000001020000000007000000fc020000ffffff000000040000002d01000009000000fa02000003000000000000002200040000002d0101000e0000
0024030500990acf013c0dcf013c0d0d00990a0d00990acf0109000000fa02000000000000000000002200040000002d01020007000000fc020100000000000000040000002d01030004000000f001010010000000fb02bdff1e000000000090010000000000000022417269616c00b281040000002d01010010000000fb02
1000070000000000bc02000000000102022253797374656d006e040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101000c00000021050b0046696c652057726974657200da00520b090000002105060046696c7465722a01a0
0b040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01050004000000020101000a00000025030300b002ee002103ee006903ee00040000002d01020004000000f00105000400000002010200050000000102000000000700
0000fc020000000000000000040000002d01050009000000fa02050000000000ffffff002200040000002d0106000c000000240304006303d7009103ee00630305016303d700040000002d010200040000002d01030010000000fb02bdff200000000000bc020000000000000020417269616c006bad040000002d01070004
0000002d010400040000002d010000040000002d0106000c000000240304000303c00003031c013f031c013f03c000040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010042000201
0903040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000a00000025030300b809ee00290aee00710aee00040000002d01020004000000f001080004000000020102000500000001020000000004
0000002d010500040000002d0106000c000000240304006b0ad700990aee006b0a05016b0ad700040000002d010200040000002d010300040000002d010700040000002d010400040000002d010000040000002d0106000c000000240304000b0ac0000b0a1c01470a1c01470ac000040000002d010200040000002d010300
0400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010041000201110a040000002d010400050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d01000009000000fa0200
0003000000000000002200040000002d0108000e000000240305001507cf01b809cf01b8090d0015070d001507cf01040000002d010200040000002d01030004000000f0010800040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e011800050000000902
00000000040000002d010100080000002105030041564900b200300808000000210503004d75780002012708090000002105060046696c74657252011c08040000002d010400050000000902e6e6e6000500000001020000000004000000020102000500000001020000000007000000fc020000e6e6e6009929040000002d
01080009000000fa02000003000000000000002200040000002d0109000e000000240305000d00cf01b002cf01b0020d000d000d000d00cf01040000002d010200040000002d01030004000000f001080004000000f0010900040000002d010100040000002d0104000400000008010000050000000a020000000004000000
02010100040000002e01180005000000090200000000040000002d0101000a0000002105080022536f7572636522da00dd00090000002105060046696c7465722a011401040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa020000030000009a9a9a002200040000002d
01080004000000020101000a000000250303005f0191035f01b0025f01f801040000002d01020004000000f001080004000000020102000500000001020000000007000000fc0200009a9a9a002f04040000002d010800040000002d0106000c000000240304004801fd015f01cf017601fd014801fd01040000002d010200
040000002d01030004000000f0010800050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d010000040000002d0106000e000000240305000d002704b0022704b00291030d0091030d002704040000002d010200040000002d010300040000002d010100040000002d
0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d0101000500000009029a9a9a000b0000002105090044562044657669636500f003c00005000000090200000000040000002d010400050000000902e6e6e600050000000102000000000400
0000020102000500000001020000000007000000fc020000e6e6e6009929040000002d01080009000000fa02000003000000000000002200040000002d0109000e000000240305009103cf013406cf0134060d0091030d009103cf01040000002d010200040000002d01030004000000f001080004000000f0010900040000
002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d01010007000000210502004456b200b4040a0000002105080053706c697474657202017a04090000002105060046696c74657252019804040000002d0104000500
00000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000a000000250303003406b600a506b600ed06b600040000002d01020004000000f0010800040000000201020005000000010200000000040000002d010500040000002d
0106000c00000024030400e7069f001507b600e706cd00e7069f00040000002d010200040000002d010300040000002d010700040000002d010400040000002d010000040000002d0106000c00000024030400870688008706e400c306e400c3068800040000002d010200040000002d010300040000000801000005000000
0a02000000000400000002010100040000002e01180005000000090200000000040000002d01070007000000210501004300ca008d06040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000a0000
002503030034062701a5062701ed062701040000002d01020004000000f0010800040000000201020005000000010200000000040000002d010500040000002d0106000c00000024030400e706100115072701e7063e01e7061001040000002d010200040000002d010300040000002d010700040000002d01040004000000
2d010000040000002d0106000c000000240304008706f90087065501c3065501c306f900040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700070000002105010044003b018d06040000002d01040003
00000000000000}}}}}
\par \pard\plain \s20\qc\sb120\sa120\widctlpar \b\f4\fs20 Figure {\field{\*\fldinst  SEQ Figure \\* ARABIC }{\fldrslt {\lang1024 7}}}:  DV capture to type 2 DV-AVI file
\par \pard\plain \widctlpar \f4\fs20 
\par 
\par Figure 8, below, illustrates the \ldblquote output\rdblquote  of a type 1 DV-AVI file utilizing a \ldblquote sink\rdblquote 
 filter that communicates via hardware device drivers to a DV device (such as a 1394-based DV camcorder) for DV data output using a DirectShow filter graph.  Table 1 above defines the media types.
\par 
\par \pard \qc\li-1800\ri-1800\keepn\widctlpar {\pard\plain \qc\li-1800\ri-1800\keepn\widctlpar \f4\fs20 {\object\objautlink\rsltpict\objw0\objh0{\*\objclass }{\*\objdata 010500000100000010000000566973696f2e44726177696e672e340041000000
433a5c50726f6772616d2046696c65735c566973696f5c44726177696e67735c4f75747075742074797065322044562046696c7465722047726170682e76736400000000000000000000000000000000000105000000000000}{\result {{\pict\wmetafile8\picw14400\pich4558\picwgoal8164\pichgoal2584 
010009000003ce0500000b00100000000000050000000b0200000000050000000c0235044a0d050000000902ffffff000500000001020000000004000000020102000500000001020000000007000000fc020000ffffff000000040000002d01000009000000fa02000003000000000000002200040000002d0101000e0000
00240305000d00cf01b002cf01b0020d000d000d000d00cf0109000000fa02000000000000000000002200040000002d01020007000000fc020100000000000000040000002d01030004000000f001010010000000fb02bdff1e000000000090010000000000000022417269616c00b281040000002d01010010000000fb02
1000070000000000bc02000000000102022253797374656d006e040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010100100000002105130046696c6520536f7572636520286173796e632900da003e00090000002105060046
696c7465722a011401040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01050004000000020101000c00000025030400b002ee00fb02ee002103ee006903ee00040000002d01020004000000f00105000400000002010200
0500000001020000000007000000fc020000000000000000040000002d01050009000000fa02050000000000ffffff002200040000002d0106000c000000240304006303d7009103ee00630305016303d700040000002d010200040000002d01030010000000fb02bdff200000000000bc020000000000000020417269616c
00ad03040000002d010700040000002d010400040000002d010000040000002d0106000c000000240304000303c00003031c013f031c013f03c000040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010700
0700000021050100410002010903040000002d010400050000000902e6e6e6000500000001020000000004000000020102000500000001020000000007000000fc020000e6e6e6009929040000002d01080009000000fa02000003000000000000002200040000002d0109000e00000024030500990acf013c0dcf013c0d0d
00990a0d00990acf01040000002d010200040000002d01030004000000f001080004000000f0010900040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d01010009000000210506002253696e6b22da00910b
090000002105060046696c7465722a01a00b040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa020000030000009a9a9a002200040000002d01080004000000020101000a00000025030300eb0bcf01eb0bb002eb0b6903040000002d01020004000000f0010800040000
00020102000500000001020000000007000000fc0200009a9a9a002f04040000002d010800040000002d0106000c00000024030400020c6303eb0b9103d40b6303020c6303040000002d010200040000002d01030004000000f0010800050000000902ffffff00050000000102000000000400000002010200050000000102
00000000040000002d010000040000002d0106000e00000024030500990a27043c0d27043c0d9103990a9103990a2704040000002d010200040000002d010300040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000
002d0101000500000009029a9a9a000b0000002105090044562044657669636500f0034c0b05000000090200000000040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01080004000000020101000a000000250303003406
b600a506b600ed06b600040000002d01020004000000f0010800040000000201020005000000010200000000040000002d010500040000002d0106000c00000024030400e7069f001507b600e706cd00e7069f00040000002d010200040000002d01030010000000fb02bdff200000000000bc020000000000000022417269
616c0000f0040000002d010800040000002d010400040000002d010000040000002d0106000c00000024030400870688008706e400c306e400c3068800040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d01
080007000000210501004300ca008d06040000002d010400050000000902ffffff0005000000010200000000040000002d01030009000000fa02000003000000000000002200040000002d01090004000000020101000a00000025030300b809ee00290aee00710aee00040000002d01020004000000f00109000400000002
01020005000000010200000000040000002d010500040000002d0106000c000000240304006b0ad700990aee006b0a05016b0ad700040000002d010200040000002d010300040000002d010800040000002d010400040000002d010000040000002d0106000c000000240304000b0ac0000b0a1c01470a1c01470ac0000400
00002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010800070000002105010042000201110a040000002d010400050000000902e6e6e6000500000001020000000004000000020102000500000001020000000007
000000fc020000e6e6e6009929040000002d01090009000000fa02000003000000000000002200040000002d010a000e000000240305001507cf01b809cf01b8090d0015070d001507cf01040000002d010200040000002d01030004000000f001090004000000f0010a00040000002d010100040000002d01040004000000
08010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d01010007000000210502004456b200380808000000210503004d75780002012708090000002105060046696c74657252011c08040000002d010400050000000902ffffff0005000000010200000000040000
002d01030009000000fa02000003000000000000002200040000002d01090004000000020101000c00000025030400340627017f062701a5062701ed062701040000002d01020004000000f0010900040000000201020005000000010200000000040000002d010500040000002d0106000c00000024030400e70610011507
2701e7063e01e7061001040000002d010200040000002d010300040000002d010800040000002d010400040000002d010000040000002d0106000c000000240304008706f90087065501c3065501c306f900040000002d010200040000002d0103000400000008010000050000000a02000000000400000002010100040000
002e01180005000000090200000000040000002d010800070000002105010044003b018d06040000002d010400050000000902ffffff0005000000010200000000040000000201020005000000010200000000040000002d01000009000000fa02000003000000000000002200040000002d0109000e000000240305009103
cf013406cf0134060d0091030d009103cf01040000002d010200040000002d01030004000000f0010900040000002d010100040000002d0104000400000008010000050000000a02000000000400000002010100040000002e01180005000000090200000000040000002d010100080000002105030041564900b200ac040a
0000002105080053706c697474657202017a04090000002105060046696c74657252019804040000002d01040003000000000000000000}}}}}
\par \pard\plain \s20\qc\sb120\sa120\widctlpar \b\f4\fs20 Figure {\field{\*\fldinst  SEQ Figure \\* ARABIC }{\fldrslt {\lang1024 8}}}:  \ldblquote Output\rdblquote  of type 2 DV-AVI file
\par \pard\plain \widctlpar \f4\fs20 
\par 
\par \pard \keepn\widctlpar The following example shows the type 2 DV-AIFF RIFF form expanded with completed header chunks (including optional DVINFO data following the BAPMAPINFO in the \lquote strf\rquote  sub-chunk for the \lquote vids\rquote  stream):

\par \pard\plain \s17\keepn\widctlpar \f4\fs20 
\par \pard\plain \keepn\widctlpar \f4\fs20 {\f11\fs18 00000000 RIFF (103E2920) 'AVI '
\par 0000000C     LIST (00000146) 'hdrl'
\par 00000018         avih (00000038)
\par                      dwMicroSecPerFrame    : 33367
\par                      dwMaxBytesPerSec      : 3728000
\par                      dwPaddingGranularity  : 0
\par                      dwFlags               : 0x810 HASINDEX | TRUSTCKTYPE
\par                      dwTotalFrames         : 2192
\par                      dwInitialFrames       : 0
\par                      dwStreams             : 2
\par                      dwSuggestedBufferSize : 120000
\par                      dwWidth               : 720
\par                      dwHeight              : 480
\par }\pard \widctlpar {\f11\fs18                      dwReserved            : 0x0
\par }\pard \keepn\widctlpar {\f11\fs18 00000058         LIST (00000094) 'strl'
\par 00000064             strh (00000038)
\par                          fccType               : 'vids'
\par                          fccHandler            : 'dvsd'
\par                          dwFlags               : 0x0
\par                          wPriority             : 0
\par                          wLanguage             : 0x0 undefined
\par                          dwInitialFrames       : 0
\par                          dwScale               : 100 (29.970 Frames/Sec)
\par                          dwRate                : 2997
\par                          dwStart               : 0
\par                          dwLength              : 2192
\par                          dwSuggestedBufferSize : 120000
\par                          dwQuality             : 0
\par                          dwSampleSize          : 0
\par }\pard \widctlpar {\f11\fs18                          rcFrame               : 0,0,720,480
\par }\pard \keepn\widctlpar {\f11\fs18 000000A4             strf (00000048)
\par                          biSize          : 40
\par                          biWidth         : 720
\par                          biHeight        : 480
\par                          biPlanes        : 1
\par                          biBitCount      : 24
\par                          biCompression   : 0x64737664 'dvsd'
\par                          biSizeImage     : 120000
\par                          biXPelsPerMeter : 0
\par                          biYPelsPerMeter : 0
\par                          biClrUsed       : 0
\par }\pard\plain \s15\keepn\widctlpar \f11\fs18                          biClrImportant  : 0
\par \pard \s15\keep\keepn\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600                          dwDVAAuxSrc     : 0x........
\par                          dwDVAAuxCtl     : 0x........
\par                          dwDVAAuxSrc1    : 0x........
\par                          dwDVAAuxCtl1    : 0x........
\par                          dwDVVAuxSrc     : 0x........
\par                          dwDVVAuxCtl     : 0x........
\par \pard \s15\keep\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600                          dwDVReserved[2] : 0,0
\par \pard\plain \keepn\widctlpar \f4\fs20 {\f11\fs18 000000F4         LIST (0000005E) 'strl'
\par 00000100             strh (00000038)
\par                          fccType               : 'auds'
\par                          fccHandler            : '    '
\par                          dwFlags               : 0x0
\par                          wPriority             : 0
\par                          wLanguage             : 0x0 undefined
\par                          dwInitialFrames       : 0
\par                          dwScale               : 1 (32000.000 Samples/Sec)
\par                          dwRate                : 32000
\par                          dwStart               : 0
\par                          dwLength              : 2340474
\par                          dwSuggestedBufferSize : 4272
\par                          dwQuality             : 0
\par                          dwSampleSize          : 4
\par }\pard \widctlpar {\f11\fs18                          rcFrame               : 0,0,0,0
\par }\pard \keepn\widctlpar {\f11\fs18 00000140             strf (00000012)
\par                          wFormatTag      : 1 PCM
\par                          nChannels       : 2
\par                          nSamplesPerSec  : 32000
\par                          nAvgBytesPerSec : 128000
\par                          nBlockAlign     : 4
\par                          wBitsPerSample  : 16
\par                          cbSize          : 0
\par 00000814     LIST (103D0EF4) 'movi'
\par 103D1710     idx1 (00011210)
\par }\pard\plain \s1\sb240\sa160\keepn\widctlpar \b\f5\fs32 {\*\bkmkstart _Toc398009406}2.0\tab AVI File Background Information{\*\bkmkend _Toc398009406}
\par \pard\plain \s2\sb240\sa60\keepn\widctlpar \b\f5\fs28 {\*\bkmkstart _Toc398009407}2.1\tab AVI files{\*\bkmkend _Toc398009407}
\par \pard\plain \widctlpar \f4\fs20 The Microsoft audio-video interleaved (AVI) file format is a RIFF file specification used with applications that capture, edit, and play back audio-video sequences.  In general, AVI files contain multiple streams o
f different types of data.  Most AVI sequences use both audio and video streams.  A simple variation for an AVI sequence uses video data and does not require an audio stream.
\par 
\par Modifications to the original AVI file specification made in the {\i OpenDML AVI File Format Extensions} are not discussed in this section.  For further information on these extensions, see {\i OpenDML AVI File Format Extensions}.
\par 
\par \pard\plain \s2\sb240\sa60\keepn\widctlpar \b\f5\fs28 {\*\bkmkstart _Toc398009408}2.2\tab AVI RIFF Form{\*\bkmkend _Toc398009408}
\par \pard\plain \widctlpar \f4\fs20 AVI files use the AVI RIFF form.  The AVI RIFF form is identified by the four-character code \lquote AVI \rquote 
.  All AVI files include two mandatory LIST chunks.  These chunks define the format of the stream and stream data.  AVI files might also include an index chunk.  This optional chunk specifies the location of data chunks within the file.  An AVI file wi
th these components has the following form:
\par 
\par \pard\plain \s15\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 RIFF ('AVI '
\par       LIST ('hdrl'
\par               .
\par               .
\par               .
\par            )
\par       LIST ('movi'
\par               .
\par               .
\par               .
\par            )
\par       ['idx1'<AVI Index>]
\par      )
\par \pard\plain \widctlpar \f4\fs20 
\par The LIST chunks and the index chunk are subchunks of the RIFF \lquote AVI \rquote  chunk.  The \lquote AVI \rquote  chunk identifies the file as an AVI RIFF file.  The LIST \lquote hdrl\rquote 
 chunk defines the format of the data and is the first required LIST chunk.  The LIST \lquote movi\rquote  chunk contains the data for the AVI sequence and is the second required LIST chunk.  The \lquote idx1\rquote 
 chunk is the index chunk.  AVI files must keep these three components in the proper sequence.
\par 
\par The LIST \lquote hdrl\rquote  and LIST \lquote movi\rquote  chunks use subchunks for their data.  The following example shows the AVI RIFF form expanded with the chunks needed to complete the LIST \lquote hdrl\rquote  and LIST \lquote movi\rquote  chunks:

\par 
\par \pard\plain \s15\keep\keepn\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 RIFF ('AVI '
\par       LIST ('hdrl'
\par             'avih'(<Main AVI Header>)
\par             LIST ('strl'
\par                   'strh'(<Stream header>)
\par                   'strf'(<Stream format>)
\par                   'strd'(<additional header data>)
\par                   'strn'(<Stream name>)
\par                   ...
\par                  )
\par              .
\par              .
\par              .
\par            )
\par 
\par       LIST ('movi'
\par             \{SubChunk | LIST ('rec '
\par                               SubChunk1
\par                               SubChunk2
\par                                 .
\par                                 .
\par                                 .
\par                              )
\par                .
\par                .
\par                .
\par             \}
\par             .
\par             .
\par             .
\par            )
\par 
\par       ['idx1'<AVI Index>]
\par      )
\par \pard\plain \widctlpar \f4\fs20 
\par The following sections describe the chunks contained in the LIST \lquote hdrl\rquote  and LIST \lquote movi\rquote  chunks. The \lquote idx1\rquote  chunk is not described in this document.  For further information on the \lquote idx1\rquote 
 chunk and indexes in AVI files, see the {\i OpenDML AVI File Format Extensions}.
\par 
\par 
\par \pard\plain \s2\sb240\sa60\keepn\widctlpar \b\f5\fs28 {\*\bkmkstart _Toc398009409}2.3\tab The Main AVI Header Chunk{\*\bkmkend _Toc398009409}
\par \pard\plain \widctlpar \f4\fs20 The file begins with the main header.  In the AVI file, this header is identified by the \lquote avih\rquote 
 four-character code.  The header contains general information about the file, such as the number of streams within the file and the width and height of the AVI sequence.  The main header has the following data structure defined for it:
\par 
\par \pard\plain \s15\keep\keepn\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 typedef struct \{
\par \tab DWORD dwMicroSecPerFrame;
\par \tab DWORD dwMaxBytesPerSec;
\par \tab DWORD dwReserved1;
\par \tab DWORD dwFlags;
\par \tab DWORD dwTotalFrames;
\par \tab DWORD dwInitialFrames;
\par \tab DWORD dwStreams;
\par \tab DWORD dwSuggestedBufferSize;
\par \tab DWORD dwWidth;
\par \tab DWORD dwHeight;
\par \tab DWORD dwReserved[4];
\par \} MainAVIHeader;
\par \pard\plain \s17\widctlpar \f4\fs20 
\par \pard\plain \widctlpar \f4\fs20 The {\b dwMicroSecPerFrame} member specifies the period between video frames.  This value indicates the overall timing for the file.
\par 
\par The {\b dwMaxBytesPerSec} member specifies the approximate maximum data rate of the file.  This value indicates
 the number of bytes per second the system must handle to present an AVI sequence as specified by the other parameters contained in the main header and stream header chunks.
\par 
\par The {\b dwFlags} member contains any flags for the file.  The AVIF_HASINDEX, AVIF_MUSTUSEINDEX, AVIF_ISINTERLEAVED, AVIF_COPYRIGHTED, and AVIF_WASCAPTUREFILE flags are defined.
\par 
\par The AVIF_HASINDEX and AVIF_MUSTUSEINDEX flags apply to files with an index chunk.  The AVI_HASINDEX flag indicates an index is present.  The AVIF_MUSTUSEINDEX flag 
indicates the index should be used to determine the order of the presentation of the data.  When this flag is set, it implies the physical ordering of the chunks in the file does not correspond to the presentation order.
\par 
\par The AVIF_ISINTERLEAVED flag indicates the AVI file has been interleaved.  The system can stream interleaved data from a CD-ROM more efficiently than non-interleaved data.  For more information about interleaved files, see \ldblquote 
Special Information for Interleaved Files\rdblquote  in the {\i Video for Windows Programmer\rquote s Guide}.
\par 
\par The AVIF_COPYRIGHTED flag indicates the AVI file contains copyrighted data.  When this flag is set, applications should not let users duplicate the file or the data in the file.
\par 
\par The AVIF_WASCAPTUREFILE flag indicates the AVI file is a specially allocated file used for capturing real-time video.  Typically, capture files have been defragmented by the user so video capture data can be efficiently streamed into the file.  If this fl
ag is set, an application should warn the user before writing over the file.
\par 
\par The {\b dwTotalFrames} member of the main header specifies the total number of frames of data in the file.
\par 
\par The {\b dwInitialFrames}
 member is used for interleaved files.  If you are creating interleaved files, specify the number of frames in the file prior to the initial frame of the AVI sequence in this member.  For more information about the contents of this member, see \ldblquote 
Special Information for Interleaved Files\rdblquote  in the {\i Video for Windows Programmer\rquote s Guide}.
\par 
\par The {\b dwStreams} member specifies the number of streams in the file.  For example, a file with audio and video has two streams.
\par 
\par The {\b dwSuggestedBufferSize}
 member specifies the suggested buffer size for reading the file.  Generally, this size should be large enough to contain the largest chunk in the file.  If set to zero, or if it is too small, the playback software will have to reallocate memory during pl
ayback, which will reduce performance.  For an interleaved file, the buffer size should be large enough to read an entire record, and not just a chunk.
\par 
\par The {\b dwWidth} and {\b dwHeight} members specify the width and height of the AVI file in pixels.
\par 
\par 
\par \pard\plain \s2\sb240\sa60\keepn\widctlpar \b\f5\fs28 {\*\bkmkstart _Toc398009410}2.4\tab The Stream Header (\lquote strl\rquote ) List Chunk{\*\bkmkend _Toc398009410}
\par \pard\plain \widctlpar \f4\fs20 The main header is followed by one or more \lquote strl\rquote  chunks.  (A \lquote strl\rquote  chunk is required for each data stream.)  These chunks contain information about the streams in the file.  Each \lquote strl
\rquote  chunk must contain a stream header and stream format chunk.  Stream header chunks are identified by the four-character code \lquote strh\rquote  and the stream format chunks are identified by the four-character code \lquote strf\rquote 
.  In addition to the stream header and stream format chunks, the \lquote strl\rquote  chunk might also contain a stream-header data chunk and a stream name chunk.  Stream-header data chunks are identified by the four-character code \lquote strd\rquote 
.  Stream name chunks are identified by the four-character code \lquote strn\rquote .
\par 
\par The stream header has the following data structure defined for it:
\par 
\par \pard\plain \s15\keep\keepn\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 typedef struct \{
\par \tab FOURCC fccType;
\par \tab FOURCC fccHandler;
\par \tab DWORD  dwFlags;
\par \tab DWORD  dwPriority;
\par \tab DWORD  dwInitialFrames;
\par \tab DWORD  dwScale;
\par \tab DWORD  dwRate;
\par \tab DWORD  dwStart;
\par \tab DWORD  dwLength;
\par \tab DWORD  dwSuggestedBufferSize;
\par \tab DWORD  dwQuality;
\par \tab DWORD  dwSampleSize;
\par \tab RECT   rcFrame;
\par \} AVIStreamHeader;
\par \pard\plain \widctlpar \f4\fs20 
\par The stream header specifies the type of data the stream contains, such as audio or video, by means of a four-character code.  The {\b fccType} member is set to \lquote vids\rquote  if the stream it specifies contains video data.  It is set to \lquote auds
\rquote  if it contains audio data.  It is set to \lquote TXTS\rquote  if it contains text data.
\par 
\par The {\b fccHandler} member contains a four-character code describing the stream handler for the data.  For audio and video streams, this specifies the installable compressor or decompressor.
\par 
\par The {\b dwFlags}
 member contains any flags for the data stream.  The AVISF_DISABLED flag indicates that the stream data should be rendered only when explicitly enabled by the user.  The AVISF_VIDEO_PALCHANGES flag indicates palette changes are embedded in the file.

\par 
\par The {\b dwInitialFrames} member is used for interleaved files.  If you are creating interleaved f
iles, specify the number of frames in the file prior to the initial frame of the AVI sequence in this member.  For more information about the contents of this member, see \ldblquote Special Information for Interleaved Files\rdblquote  in the {\i 
Video for Windows Programmer\rquote s Guide}.
\par 
\par The remaining members describe the playback characteristics of the stream.  These factors include the playback rate ({\b dwScale} and {\b dwRate}), the starting time of the sequence ({\b dwStart}), the length of the sequence ({\b dwLength}
), the size of the playback buffer ({\b dwSuggestedBuffer}), an indicator of the data quality ({\b dwQuality}), and the sample size ({\b dwSampleSize}).  For more information about these members, see the \ldblquote AVI RIFF File Reference,\rdblquote 
 later in this specification.
\par 
\par Some of the members in the stream header structure are also present in the main header structure.  The data in the main header applies to the whole file, while the data in the stream header structure applies only to a stream.
\par 
\par A stream format (\lquote strf\rquote ) chunk must follow a stream header (\lquote strh\rquote ) chunk.  The stream format chunk describes the format of the data in the stream.  For video streams, the information in this chunk is a {\b BITMAPINFO}
 structure (including palette information if appropriate).  For audio streams, the information in this chunk is a {\b WAVEFORMATEX} or {\b PCMWAVEFORMAT} structure.  (The {\b WAVEFORMATEX}
 structure is an extended version of the WAVEFORMAT structure.)  For more information about this structure and other stream types, see the {\i New Multimedia Data Types and Data Techniques Standards Update}.
\par 
\par The \lquote strl\rquote  chunk might also contain an additional stream-header data (\lquote strd\rquote 
) chunk.  If used, this chunk follows the stream format chunk.  The format and content of this chunk is defined by installable compression or decompression drivers.  Typically, dr
ivers use this information for configuration.  Applications that read and write RIFF files do not need to decode this information.  They transfer this data to and from a driver as a memory block.
\par 
\par The optional \lquote strn\rquote  stream name chunk provides a zero-terminated text string describing the stream.  (The AVIFile functions can use this chunk to let applications identify the streams they want to access by their names.)
\par 
\par An AVI player associates the stream headers in the LIST \lquote hdrl\rquote  chunk with the stream data in the LIST \lquote movi\rquote  chunk by using the order of the \lquote strl\rquote  chunks.  The first \lquote strl\rquote 
 chunk applies to stream 0, the second applies to stream 1, and so forth.
\par 
\par For example, if the first \lquote strl\rquote  chunk describes the wave audio data, the wave audio data is contained in stream 0.  Similarly, if the second \lquote strl\rquote  chunk describes video data, then the video data is contained in stream 1.

\par 
\par 
\par \pard\plain \s2\sb240\sa60\keepn\widctlpar \b\f5\fs28 {\*\bkmkstart _Toc398009411}2.5\tab The LIST \lquote movi\rquote  Chunk{\*\bkmkend _Toc398009411}
\par \pard\plain \widctlpar \f4\fs20 Following the header information is a LIST \lquote movi\rquote  chunk that contains chunks of the actual data in the streams \endash 
 that is, the pictures and sounds themselves.  The data chunks can reside directly in the LIST \lquote movi\rquote  chunk or they might be grouped into \lquote rec \rquote  chunks.  The \lquote rec \rquote 
 grouping implies that the grouped chunks should be read from disk all at once.  This is used only for files specifically interleaved to play from CD-ROM.
\par 
\par Like any RIFF chunk, the data chunks contain a four-character code to identify the chunk type.  The four-character code that identifies each chunk consists of the stream number and a two-character code that defines the type of information encapsulated in 
the chunk.  For example, a waveform chunk is identified by a two-character code of \lquote wb\rquote .  If a waveform chunk corresponded to the second LIST \lquote hdrl\rquote  stream description, it would have a four-character code of \lquote 01wb
\rquote .
\par 
\par {\b Note:}  While two-character codes are a convenient way to describe a stream, do not expect them to be recognized by other applications.  Use four-character codes when creating a stream or transferring the information to other applications.
\par 
\par Because all the format information is in the header, the audio data contained in these data chunks does not contain any information about its format.  An audio data chunk has the following format (the ## in the format represents the stream identifier):

\par 
\par \pard\plain \s15\keep\keepn\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 WAVE Bytes '##wb'
\par      BYTE  abBytes[];
\par \pard\plain \widctlpar \f4\fs20 
\par Video data can be compressed or uncompressed DIBs.  An uncompressed DIB has BI_RGB specified for the {\b biCompression} member in its associated {\b BITMAPINFO} structure.  A compressed DIB has a value other than BI_RGB specified in the {\b biCompression}
 member.  For more information about compression formats, see the description of the {\b BITMAPINFOHEADER} data structure in the {\i Microsoft Windows Programmer\rquote s Reference}.
\par 
\par A data chunk for an uncompressed DIB contains RGB video data.  These chunks are identified by a two-character code of \lquote db\rquote  (db is an abbreviation for DIB bits).  Data chunks for a compressed DIB are identified by a two-character code of 
\lquote dc\rquote  (dc is an abbreviation for DIB compressed).  Neither data chunk will contain any header information about the DIBs.  The data chunk for an uncompressed DIB has the following form:
\par 
\par \pard\plain \s15\keep\keepn\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 DIB  Bits  '##db'
\par      BYTE  abBits[];
\par \pard\plain \widctlpar \f4\fs20 
\par The data chunk for a compressed DIB has the following form:
\par 
\par \pard\plain \s15\keep\keepn\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 Compressed DIB  Bits  '##dc'
\par                 BYTE  abBits[];
\par \pard\plain \widctlpar \f4\fs20 
\par Video data chunks can also define new palette entries used to update the palette during an AVI sequence.  For more information on specifying palette information, see {\i Video for Windows Programmer\rquote s Guide}.
\par 
\par Text streams can use arbitrary two-character codes.
\par 
\par 
\par \pard\plain \s2\sb240\sa60\keepn\widctlpar \b\f5\fs28 {\*\bkmkstart _Toc398009412}2.6\tab AVI RIFF File Reference{\*\bkmkend _Toc398009412}
\par \pard\plain \widctlpar \f4\fs20 This section lists data structures used to support AVI RIFF files.  The structure definition is given, followed by a description of each member.
\par \pard\plain \s3\sb240\sa60\keepn\widctlpar \b\f5 {\*\bkmkstart _Toc398009413}2.6.1\tab MainAVIHeader{\*\bkmkend _Toc398009413}
\par \pard\plain \widctlpar \f4\fs20 The {\b MainAVIHeader} structure contains global information for the entire AVI file.  It is contained within an \lquote avih\rquote  chunk within the LIST \lquote hdrl\rquote  chunk at the beginning of an AVI RIFF file.

\par 
\par \pard\plain \s15\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 typedef struct \{
\par \tab DWORD dwMicroSecPerFrame;
\par \tab DWORD dwMaxBytesPerSec;
\par \tab DWORD dwReserved1;
\par \tab DWORD dwFlags;
\par \tab DWORD dwTotalFrames;
\par \tab DWORD dwInitialFrames;
\par \tab DWORD dwStreams;
\par \tab DWORD dwSuggestedBufferSize;
\par \tab DWORD dwWidth;
\par \tab DWORD dwHeight;
\par \tab DWORD dwReserved[4];
\par \} MainAVIHeader;
\par \pard\plain \widctlpar \f4\fs20 
\par \pard \keepn\widctlpar {\b dwMicroSecPerFrame
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the number of microseconds between frames.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwMaxBytesPerSec
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the approximate maximum data rate of a file.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwReserved1
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Reserved.  Set this to zero.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwFlags
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies any applicable flags.  The following flags are defined:
\par \pard \s16\li360\keepn\widctlpar AVIF_HASINDEX
\par \pard \s16\li720\widctlpar Indicates the AVI file has an \lquote idx1\rquote  chunk containing an index at the end of the file.  For good performance, all AVI files should contain an index.
\par \pard \s16\li360\keepn\widctlpar AVIF_MUSTUSEINDEX
\par \pard \s16\li720\widctlpar Indicates that the index, rather than the physical ordering of the chunks in the file, should be used to determine the order of presentation of the data.  
For example, this could be used for creating a list of frames for editing.
\par \pard \s16\li360\keepn\widctlpar AVIF_ISINTERLEAVED
\par \pard \s16\li720\widctlpar Indicates the AVI file is interleaved.
\par \pard \s16\li360\keepn\widctlpar AVIF_WASCAPTUREFILE
\par \pard \s16\li720\widctlpar Indicates the AVI file is a specially allocated file use for capturing real-time video.  Applications should warn the user before writing over a file with this flag set because the user probably defragmented this file.
\par \pard \s16\li360\keepn\widctlpar AVIF_COPYRIGHTED
\par \pard \s16\li720\widctlpar Indicates the AVI file contains copyrighted data and software.  When this flag is used, software should not permit the data to be duplicated.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwTotalFrames
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the number of frames of data in file.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwInitialFrames
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the initial frame for interleaved files.  Non-interleaved files should specify zero.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwStreams
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the number of streams in the file.  For example, a file with audio and video has two streams.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwSuggestedBufferSize
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the suggested buffer size for reading the file.  Generally, this size should be large enough to contain the largest check in the file.  If set to zero, or if it is too small,
 the playback software will have to reallocate memory during playback, which will reduce performance.  For an interleaved file, this buffer size should be large enough to read and entire record, and not just a chunk.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwWidth
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the width of the AVI file in pixels.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwHeight
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the height of the AVI file in pixels.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwReserved[4]
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Reserved.  Set this array to zero.
\par 
\par 
\par \pard\plain \s3\sb240\sa60\keepn\widctlpar \b\f5 {\*\bkmkstart _Toc398009414}2.6.2\tab AVIStreamHeader{\*\bkmkend _Toc398009414}
\par \pard\plain \widctlpar \f4\fs20 The {\b AVIStreamHeader} structure contains header information for a single stream of a file.  It is contained within an \lquote strh\rquote  chunk within a LIST \lquote strl\rquote 
 chunk that is itself contained with the LIST \lquote hdrl\rquote  chunk at the beginning of an AVI RIFF file.
\par 
\par \pard\plain \s15\keep\keepn\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 typedef struct \{
\par \tab FOURCC fccType;
\par \tab FOURCC fccHandler;
\par \tab DWORD  dwFlags;
\par \tab DWORD  dwPriority;
\par \tab DWORD  dwInitialFrames;
\par \tab DWORD  dwScale;
\par \tab DWORD  dwRate;
\par \tab DWORD  dwStart;
\par \tab DWORD  dwLength;
\par \tab DWORD  dwSuggestedBufferSize;
\par \tab DWORD  dwQuality;
\par \tab DWORD  dwSampleSize;
\par \tab RECT   rcFrame;
\par \} AVIStreamHeader;
\par \pard\plain \widctlpar \f4\fs20 
\par \pard \keepn\widctlpar {\b fccType
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Contains a four-character code that specifies the type of the data contained in the stream.  The following standard AVI values for video and audio are defined:
\par {\fs10 
\par }\pard \s16\li360\keepn\widctlpar  \lquote vids\rquote 
\par \pard \s16\li720\widctlpar Indicates the stream contains video data.  The stream format chunk contains a {\b BITMAPINFO} structure that can include palette information.
\par \pard \s16\li360\keepn\widctlpar \lquote auds\rquote 
\par \pard \s16\li720\widctlpar Indicates the stream contains audio data.  The stream format chunk contains a {\b WAVEFORMATEX} or {\b PCMWAVEFORMAT} structure.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b fccHandler
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Optionally, contains a four-character code that identifies a specific data handler.  The data handler is the preferred handler for the stream.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwFlags
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies any applicable flags.  The bits in the high-order word of these flags are specific to the type of data contained in the stream.  The following standard flags are defined:
\par AVISF_DISABLED
\par \pard \s16\li720\widctlpar Indicates this stream should not be enabled by default.
\par \pard \s16\li360\widctlpar AVISF_VIDEO_PALCHANGES
\par \pard \s16\li720\widctlpar Indicates this video stream contains palette changes.  This flag warns the playback software that it will need to animate the palette.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwPriority
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies prioriyt of a stream type.  For example, in a file with multiple audio streams, the one with the highest priority might be the default stream.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwInitialFrames
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies how far audio data is skewed ahead of the video frames in interleaved files.  Typically, this is about 0.75 seconds.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwScale
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Used together with {\b dwRate} to specify the time scale that this stream will use.  Dividing {\b dwRate} by {\b dwScale}
 gives the number of samples per second.  For video streams, this rate should be the frame rate.  For audio streams, this rate should correspond to the time needed for nBlockAlign bytes of audio, which for PCM audio simply reduces to the sample rate.

\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwRate
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 See {\b dwScale}.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwStart
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the starting time of the AVI file.  The units are defined by the {\b dwRate} and {\b dwScale}
 members in the main file header.  Usually, this is zero, but it can specify a delay time for a stream that does not start concurrently with the file.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwLength
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the length of this stream.  The units are defined by the {\b dwRate} and {\b dwScale} members of the stream\rquote s header.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwSuggestedBufferSize
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies how large a buf
fer should be used to read this stream.  Typically, this contains a value corresponding to the largest chunk present in the stream.  Using the correct buffer size make playback more efficient.  Use zero if you do not know the correct buffer size.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwQuality
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 
Specifies an indicator of the quality of the data in the stream.  Quality is represented as a number between 0 and 10000.  For compressed data, this typically represents the value of the quality parameter passed to the compression software.  If set to 
\endash 1, drivers use the default quality value.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b dwSampleSize
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 
Specifies the size of a single sample of data.  This is set to zero if the samples can vary in size.  If this number is non-zero, then multiple samples of data can be grouped into a single chunk within the file.  If it is zero, each sample of data (such a
s a video frame) must be in a separate chunk.  For video streams, this number is typically zero, although it can be non-zero if all video frames are the same size.  For audio streams, this number should be the same as the {\b nBlockAlign} member of the {
\b WAVEFORMATEX} structure describing the audio.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b rcFrame
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Specifies the destination rectangle for a text or video stream within the movie rectangle specified by the {\b dwWidth} and {\b dwHeight} members of the {\b MainAVIHeader} structure.  The {\b rcFrame}
 member is typically used in support of multiple video streams.  Set this rectangle to the coordinates corresponding to the movie rectangle to update the whole movie rectangle.  Units for this member are pixels.  The upper-left corner 
of the destination rectangle to relative to the upper-left corner of the movie rectangle.
\par 
\par 
\par \pard\plain \s3\sb240\sa60\keepn\widctlpar \b\f5 {\*\bkmkstart _Toc398009415}2.6.3\tab BITMAPINFOHEADER structure{\*\bkmkend _Toc398009415}
\par \pard\plain \keepn\widctlpar \f4\fs20 The {\b BITMAPINFOHEADER} structure contains information for the video stream of an AVI RIFF file.  This structure has the following members:
\par \pard\plain \s17\keepn\widctlpar \f4\fs20 
\par \pard\plain \s15\keep\keepn\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 typedef struct tagBITMAPINFOHEADER \{
\par \tab DWORD  biSize;
\par \tab LONG   biWidth;
\par \tab LONG   biHeight;
\par \tab WORD   biPlanes;
\par \tab WORD   biBitCount;
\par \tab DWORD  biCompression;
\par \tab DWORD  biSizeImage;
\par \tab LONG   biXPelsPerMeter;
\par \tab LONG   biYPelsPerMeter;
\par \tab DWORD  biClrUsed;
\par \tab DWORD  biClrImportant;
\par \} BITMAPINFOHEADER;
\par \pard\plain \widctlpar \f4\fs20 
\par Information about the compression format is specified in the {\b biCompression} and {\b biBitCount} members.  The {\b biCompression} member specifies the type of compression used or requested.  Both existing and new compression formats use this member.

\par 
\par The {\b biBitCount} member specifies the number of bits per pixel.  Some compression formats need this information to properly decode the colors in the pixel.
\par 
\par When the value in the {\b biBitCount} member is set to less than or equal to eight, video drivers can assume the bitmap uses a palette or color table defined in the {\b BITMAPINFO} data structure.  This data structure has the following members:
\par 
\par \pard\plain \s15\keep\keepn\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 typedef struct tagBITMAPINFO \{
\par \tab BITMAPINFOHEADER bmiHeader;
\par \tab RGBQUAD          bmiColors[1];
\par \} BITMAPINFO;
\par \pard\plain \widctlpar \f4\fs20 
\par When the value in the {\b biBitCount} member is set to greater than eight, video drivers can assume bitmaps are true color and they do not use a color table.  For more information about these data structures, see the {\i Microsoft Windows Programmer
\rquote s Reference}.
\par 
\par 
\par \pard\plain \s3\sb240\sa60\keepn\widctlpar \b\f5 {\*\bkmkstart _Toc398009416}2.6.4\tab WAVEFORMATEX structure{\*\bkmkend _Toc398009416}
\par \pard\plain \keepn\widctlpar \f4\fs20 The {\b WAVEFORMATEX }structure contains information for the audio stream(s) of an AVI RIFF file.  This structure has the following members:
\par \pard\plain \s17\keepn\widctlpar \f4\fs20 
\par \pard\plain \s15\keep\keepn\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600 \f11\fs18 typedef struct waveformat_extended_tag \{
\par \tab WORD  wFormatTag;      /* format type */
\par \tab WORD  nChannels;       /* number of channels (i.e. mono, stereo...) */
\par \tab DWORD nSamplesPerSec;  /* sample rate */
\par \tab DWORD nAvgBytesPerSec; /* for buffer estimation */
\par \tab WORD  nBlockAlign;     /* block size of data */
\par \tab WORD  wBitsPerSample;  /* Number of bits per sample of mono data */
\par \tab WORD  cbSize;          /* The count in bytes of the extra size */
\par \} WAVEFORMATEX;
\par \pard\plain \widctlpar \f4\fs20 
\par \pard \keepn\widctlpar {\b wFormatTag
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Defines the type of WAVE file.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b nChannels
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Number of channels in the wave, 1 for mono, 2 for stereo.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b nSamplesPerSec
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Frequency of the sample rate of the wave file.  Examples are 11025, 22050, or 44100.  This rate is also used by the sample size entry in the fact chunk to determine the length in time of the data
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b nAvgBytesPerSec
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 Average data rate.  Playback software can estimate the buffer size using the {\b nAvgBytesPerSec} value.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b nBlockAlign
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 The block alignment (in bytes) of the data.  Playback software needs to process a multiple of {\b nBlockAlign} bytes of data at a time, so that the value of {\b nBlockAlign} can be used for buffer alignment.

\par \pard\plain \keepn\widctlpar \f4\fs20 {\b wBitsPerSample
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 This is the number of bits per sample per channel data.  Each channel is assumed to have the same sample resolution.  If this field is not needed, then it should be set to zero.
\par \pard\plain \keepn\widctlpar \f4\fs20 {\b cbSize
\par }\pard\plain \s16\li360\widctlpar \f4\fs20 The size (in bytes) of the extra information in the WAVE format head
er, not including the size of the WAVEFORMATEX structure.  As an example, in the IMA ADPCM format, cbSize is calculated as sizeof(IMAADPCMWAVEFORMAT) - sizeof(WAVEFORMATEX) which yields two.
\par }